{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./projects/classify-text-swagger-client/dist/fesm2015/classify-text-swagger-client.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main/a11y-flyout/a11y-flyout.component.ts","./src/app/main/a11y-flyout/a11y-flyout.component.html","./src/app/main/client-picker/client-picker.component.ts","./src/app/main/client-picker/client-picker.component.html","./src/app/main/header/header.component.ts","./src/app/main/header/header.component.html","./src/app/main/language-picker/language-picker.component.ts","./src/app/main/language-picker/language-picker.component.html","./src/app/main/logo/logo.component.ts","./src/app/main/logo/logo.component.html","./src/app/main/main.module.ts","./src/app/main/search/search.component.ts","./src/app/main/search/search.component.html","./src/app/main/topic-picker/topic-picker.component.ts","./src/app/main/topic-picker/topic-picker.component.html","./src/app/main/user-flyout/user-flyout.component.ts","./src/app/main/user-flyout/user-flyout.component.html","./src/app/shared-components/app-grid/app-grid.component.ts","./src/app/shared-components/app-grid/app-grid.component.html","./src/app/shared-components/breadcrumbs/breadcrumbs.component.ts","./src/app/shared-components/breadcrumbs/breadcrumbs.component.html","./src/app/shared-components/loading-indicator/loading-indicator.component.ts","./src/app/shared-components/loading-indicator/loading-indicator.component.html","./src/app/shared-components/more-button/more-button.component.ts","./src/app/shared-components/more-button/more-button.component.html","./src/app/shared-components/option-button-group/option-button-group.component.ts","./src/app/shared-components/option-button-group/option-button-group.component.html","./src/app/shared-components/progress-bar/progress-bar.component.ts","./src/app/shared-components/progress-bar/progress-bar.component.html","./src/app/shared-components/select-box/select-box.component.ts","./src/app/shared-components/select-box/select-box.component.html","./src/app/shared-components/sentry.service.ts","./src/app/shared-components/shared-components.module.ts","./src/app/shared-components/toogle-slider/toogle-slider.component.ts","./src/app/shared-components/toogle-slider/toogle-slider.component.html","./src/app/shared-components/tooltip/tooltip.component.ts","./src/app/shared-components/tooltip/tooltip.component.html","./src/app/shared-components/user.service.ts","./src/app/subnav/admin-button/admin-button.component.ts","./src/app/subnav/admin-button/admin-button.component.html","./src/app/subnav/api-button/api-button.component.ts","./src/app/subnav/api-button/api-button.component.html","./src/app/subnav/help/help.component.ts","./src/app/subnav/help/help.component.html","./src/app/subnav/sub-navigation/sub-navigation.component.ts","./src/app/subnav/sub-navigation/sub-navigation.component.html","./src/app/subnav/subnav.module.ts","./src/constants.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsL;AACrF;;AAEjG;AACA;AACA;AACA;AACA;AACA,yCAAyC,yEAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,4DAAc;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,WAAW,sBAAsB;AAC7F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gEAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kCAAkC,+DAAU,EAAE,4CAA4C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kCAAkC,+DAAU,EAAE,4CAA4C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0DAA0D,kCAAkC,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,gBAAgB,8DAAQ,oBAAoB;AACtK,uBAAuB,wEAAkB,EAAE,sDAAsD;AACjG,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,+DAAU,EAAE,GAAG;AACrD,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAA2D;AACpF;AACA;AACA;AACA,iBAAiB,sEAAgB,EAAE,kBAAkB;AACrD,iBAAiB,sEAAgB,EAAE,yCAAyC,6BAA6B,8DAAQ,iBAAiB,8DAAQ,CAAC,+DAAU,MAAM,EAAE;AAC7J;AACA,sBAAsB;AACtB,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,+DAAU;AACpC,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;;AAEoG;AACpG;;;;;;;;;;;;;ACvSA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAG,EAAE,CAAC,4QAAoD,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACvG,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;KACzB;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,EAAE,UAAU,EAAE,gBAAgB,EAAE;QACtC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,aAAa;aAC1B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE;gBACnC,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,MAAM;wBACjB,UAAU,EAAE,UAAU;qBACvB;oBACD;wBACE,IAAI,EAAE,UAAU;wBAChB,YAAY,EAAE,GAAG,EAAE,CAAC,4OAA4C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;wBAC5F,IAAI,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE;qBACjC;iBACF;aACF;SACF;KACF;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,EAAE;QACd,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,6EAAmC;QAEnC,gFAAyC;QAEzC,uEACE;QAAA,2EAA+B;QACjC,4DAAO;;6FDCM,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACqB;AACxB;AACC;AACN;AAC2C;AAClC;AAEH;AACT;AACC;AACM;AAEwB;;AAsBvE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBANT;QACT,EAAE,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,4FAAkB,EAAE;QACvD,EAAE,OAAO,EAAE,sEAAS,EAAE,QAAQ,EAAE,wEAAW,CAAC,UAAU,EAAE;KACzD,YAbQ;YACP,uEAAa;YACb,4FAAuB;YACvB,oEAAgB;YAChB,4DAAU;YACV,mEAAY;YACZ,+DAAgB;YAChB,qEAAgB;YAChB,sEAAqB;SACtB;mIAOU,SAAS,mBAlBlB,2DAAY,aAGZ,uEAAa;QACb,4FAAuB;QACvB,oEAAgB;QAChB,4DAAU;QACV,mEAAY;QACZ,+DAAgB;QAChB,qEAAgB;QAChB,sEAAqB;6FAQZ,SAAS;cApBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,oEAAgB;oBAChB,4DAAU;oBACV,mEAAY;oBACZ,+DAAgB;oBAChB,qEAAgB;oBAChB,sEAAqB;iBACtB;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,4FAAkB,EAAE;oBACvD,EAAE,OAAO,EAAE,sEAAS,EAAE,QAAQ,EAAE,wEAAW,CAAC,UAAU,EAAE;iBACzD;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClCD;AAAA;AAAA;AAA0C;;;;;;;;;;AAOnC,MAAM,mBAAmB;IAE9B;IAAiB,CAAC;;sFAFP,mBAAmB;mGAAnB,mBAAmB;QCNhC,4EAA8B;QAA9B,+DAA8B;QAAa,4DAAS;;6FDMvC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAE,8BAA8B,CAAE;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAuE;AACV;;;AAYtD,MAAM,qBAAqB;IAiBhC;QAfS,mBAAc,GAAG,2DAAa,CAAC;QAC9B,kBAAa,GAAG,IAAI,0DAAY,EAAU,CAAC;QAErD,4CAA4C;QAC5C,YAAO,GAAY;YACjB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACxB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC3B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE;SAClC;QAED,kBAAa,GAAoB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC3D,OAAO,EAAE,MAAM,CAAC,IAAI;YACpB,KAAK,EAAE,MAAM,CAAC,EAAE;SACjB,CAAC,CAAC;IAEc,CAAC;IAElB,eAAe,CAAE,aAAqB;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;;0FArBU,qBAAqB;qGAArB,qBAAqB;QCblC,oFAIkB;QADd,2KAAiB,2BAAuB,IAAC;QAC5C,4DAAiB;;QAHd,uFAA0B;;6FDYjB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAE,gCAAgC,CAAE;aAChD;;kBAGE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AEhByC;AAGF;;;;;;;;AAOzC,MAAM,eAAe;IAI1B,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAH3C,oBAAe,GAAG,6DAAe,CAAC;IAGa,CAAC;IAE1C,QAAQ;;YACZ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC;QAC1C,CAAC;KAAA;IAED,qBAAqB,CAAE,WAAkB;QACvC,gCAAgC;QAChC,OAAO,CAAC,GAAG,CAAC,0DAA0D,EAAE,WAAW,CAAC,CAAC;IACvF,CAAC;;8EAbU,eAAe;+FAAf,eAAe;QCV5B,4EAEE;QAAA,2EAA+B;QAE/B,6EAAmC;QAEnC,yFAEuB;QADN,8KAAmB,iCAA6B,IAAC;QACjE,4DAAsB;QAEvB,6EAAmC;QAEnC,6EAAmC;QAErC,4DAAS;;QARc,0DAAoC;QAApC,iGAAoC;;6FDI9C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAE,yBAAyB,CAAE;aACzC;;;;;;;;;;;;;;;;;;;;;;;AET8E;AAC/C;AAEmC;;;AAEnE,IAAK,IAGJ;AAHD,WAAK,IAAI;IACP,qBAAa;IACb,qBAAa;AACf,CAAC,EAHI,IAAI,KAAJ,IAAI,QAGR;AAOM,MAAM,uBAAuB;IAUlC;QATA,0CAA0C;QACjC,SAAI,GAAS,IAAI,CAAC,IAAI,CAAC;QACvB,qBAAgB,GAAG,IAAI,CAAC;QACvB,oBAAe,GAAG,IAAI,0DAAY,EAAU,CAAC;QAEvD,cAAS,GAAe,EAAE,CAAC;QAC3B,kBAAa,GAAoB,EAAE,CAAC;QACpC,6BAAwB,GAA2B,IAAI,CAAC;IAEvC,CAAC;IAElB,kEAAkE;IAClE,qDAAqD;IAE/C,QAAQ;;YACZ,uBAAuB;YACvB,4CAA4C;YAE5C,iEAAiE;YACjE,wCAAwC;YACxC,8CAA8C;YAC9C,uDAAuD;YACvD,OAAO;YACP,IAAI;YAEJ,0BAA0B;YAC1B,IAAI,CAAC,SAAS,GAAG,uDAAS,CAAC;YAE3B,mCAAmC;YACnC,IAAI,CAAC,SAAS,GAAG,qDAAM,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YAEhD,mCAAmC;YACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACnD,OAAO,EAAE,QAAQ,CAAC,IAAI;gBACtB,KAAK,EAAE,QAAQ,CAAC,IAAI;aACrB,CAAC,CAAC,CAAC;YAEJ,2CAA2C;YAC3C,yCAAyC;YACzC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;gBAC3B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC,EAAE;;oBACtC,MAAM,WAAW,GAAa,IAAI,CAAC,SAAS,CAAC,IAAI,CAC/C,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAC5B,CAAC;oBACF,aAAO,WAAW,0CAAE,IAAI,CAAC;gBAC3B,CAAC,CAAC;aACH;QACH,CAAC;KAAA;IAED;;OAEG;IACH,iBAAiB,CAAE,YAAoB;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;;8FAvDU,uBAAuB;uGAAvB,uBAAuB;QCfpC,oFAKkB;QADd,6KAAiB,6BAAyB,IAAC;QAC9C,4DAAiB;;QAJd,uFAA0B;;6FDcjB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAE,kCAAkC,CAAE;aAClD;;kBAGE,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEnBT;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,aAAa;IAExB;IAAiB,CAAC;IAElB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCL1B,uEACE;QAAA,oEACF;QAAA,4DAAI;;6FDGS,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAE,uBAAuB,CAAE;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACF;AAC0C;AAEjC;AACM;AACA;AAC0B;AACZ;AACA;AACM;AACH;;AA0BtE,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAbZ;YACP,4DAAY;YACZ,4DAAY;YACZ,0DAAW;YACX,kGAAsB;SACvB;mIAQU,UAAU,mBAtBnB,kEAAa;QACb,wEAAe;QACf,wEAAe;QACf,kGAAuB;QACvB,sFAAmB;QACnB,uFAAmB;QACnB,6FAAqB;QACrB,0FAAoB,aAGpB,4DAAY;QACZ,4DAAY;QACZ,0DAAW;QACX,kGAAsB,aAGtB,wEAAe;QACf,kGAAuB;QACvB,6FAAqB;QACrB,0FAAoB;6FAGX,UAAU;cAxBtB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kEAAa;oBACb,wEAAe;oBACf,wEAAe;oBACf,kGAAuB;oBACvB,sFAAmB;oBACnB,uFAAmB;oBACnB,6FAAqB;oBACrB,0FAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,0DAAW;oBACX,kGAAsB;iBACvB;gBACD,OAAO,EAAE;oBACP,wEAAe;oBACf,kGAAuB;oBACvB,6FAAqB;oBACrB,0FAAoB;iBACrB;aACF;;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAmC;AACe;AAEG;;;;;;;;;;;;;AAErD,MAAM,cAAc,GAAG,EAAE,CAAC;AAC1B,MAAM,YAAY,GAAG,sCAAsC,CAAC;AAOrD,MAAM,eAAe;IAG1B,YACU,MAAc,EACd,KAAqB;QADrB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAJ/B,YAAO,GAAG,EAAE,CAAC;QAMX,kCAAkC;QAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,MAAM,CAAC,cAAc,CAAC,kEAAoB,CAAC,EAAE;gBAC/C,OAAO,GAAG,MAAM,CAAC,kEAAoB,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,oCAAoC;IACpC,KAAK,CAAE,MAAM;QACX,IAAI,MAAM,CAAC,OAAO,KAAK,cAAc,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;YAC5D,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,YAAY,CAAE,EAAE;YACrC,WAAW,EAAE;gBACX,CAAC,kEAAoB,CAAC,EAAE,IAAI,CAAC,OAAO;aACrC;SACF,CAAC,CAAC;IACL,CAAC;;8EAlCU,eAAe;+FAAf,eAAe;QCb5B,yEACI;QAAA,2EACA;QADA,sEACA;QADuF,oLAAqB,oFAAU,iBAAa,IAAvB;QAA5G,4DACA;QAAA,uEAAsC;QAAA,iEAAM;QAAA,4DAAI;QACpD,4DAAM;;QAFqF,0DAAqB;QAArB,gFAAqB;;6FDYnG,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAE,yBAAyB,CAAE;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAA+E;AACZ;;;;;;ICG3D,wEAII;IADA,oXAA0C;IAC1C,uDACJ;IAAA,4DAAK;;;;IAHD,6KAA6C;IAE7C,0DACJ;IADI,gGACJ;;ADLR,MAAM,YAAY,GAAG,iBAAiB,CAAC;AACvC,MAAM,UAAU,GAAG,cAAc,CAAC;AAO3B,MAAM,oBAAoB;IAQ/B;QAPA,UAAK,GAAW,YAAY,CAAC;QAC7B,WAAM,GAA6B,oDAAM,CAAC;QAC1C,cAAS,GAA2B,EAAE,CAAC;QAE9B,oBAAe,GAAG,CAAC,CAAC;QACpB,kBAAa,GAA2B,EAAE,CAAC;QAC1C,qBAAgB,GAAG,IAAI,0DAAY,EAAuB,CAAC;QAuCrE,kBAAa,GAAG,CAAC,CAA0B,EAAE,CAA0B,EAAU,EAAE;YACjF,OAAO,CAAC,CAAC;QACX,CAAC;IAxCgB,CAAC;IAElB,QAAQ;QACN,uCAAuC;QACvC,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,MAAM,EAAE;YACrC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;gBAClD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aACxD;SACF;IACH,CAAC;IAED,2BAA2B;IAC3B,YAAY;QACV,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;IAC1B,CAAC;IAED,2BAA2B;IAC3B,YAAY;QACV,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;IAC5B,CAAC;IAED,gCAAgC;IAChC,QAAQ,CAAE,WAAmB,EAAE,KAAY;QACzC,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;YAC9C,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;SACrC;QAED,aAAa;QACb,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,4BAA4B;IAC5B,UAAU,CAAE,WAAmB;QAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC;;wFA5CU,oBAAoB;oGAApB,oBAAoB;QCZjC,yEACI;QADoB,mJAAc,kBAAc,IAAC,2FAAe,kBAAc,IAA7B;QACjD,yEAAkC;QAAA,uDAAW;QAAA,4DAAM;QACnD,uEAA2C;QAAA,8EAAmB;QAAA,4DAAI;QAClE,wEACI;QAAA,8GAII;;QAER,4DAAK;QACT,4DAAM;;QAVgC,0DAAW;QAAX,0EAAW;QAEhB,0DAAwC;QAAxC,gGAAwC;QAE7D,0DAAsD;QAAtD,mKAAsD;;6FDOrD,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAE,+BAA+B,CAAE;aAC/C;;kBAME,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;;;;;;;;AEnByC;;;;;ICChD,oEAIA;;;IAJK,4KAAuC;IACvC,wIAAuD;;;IAF9D,4EACE;IAAA,wHAIA;IAAA,uEAAM;IAAA,uDAAgC;IAAA,4DAAO;IAC/C,4DAAS;;;IAHF,0DAAuD;IAAvD,iIAAuD;IAEtD,0DAAgC;IAAhC,mGAAgC;;;IAGxC,yEAA6B;IAAA,kEAAmC;IAAA,4DAAS;;ADElE,MAAM,mBAAmB;IAI9B,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAE1C,QAAQ;;YAEZ,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE;QAEhD,CAAC;KAAA;;sFAVU,mBAAmB;mGAAnB,mBAAmB;QCVhC,qHACE;QAOF,qHAA6B;;QARrB,iFAAmB;QAQnB,0DAAoB;QAApB,kFAAoB;;6FDEf,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICIrD,qEACE;IAAA,uEACE;IAAA,uEAA0B;IAAA,uDAAY;IAAA,4DAAI;IAC1C,uDACF;IAAA,4DAAI;IACN,4DAAK;;;IAJA,0DAAwB;IAAxB,6FAAwB;IACC,0DAAY;IAAZ,4EAAY;IACtC,0DACF;IADE,uFACF;;ADCC,MAAM,gBAAgB;IAK3B;QAHA,UAAK,GAAkB,EAAE;QACzB,iBAAY,GAAG,CAAC;IAED,CAAC;IAEhB,QAAQ,KAAI,CAAC;IAEb,IAAI,IAAI,KAAM,OAAO,IAAI,CAAC,KAAK,EAAC,CAAC;IACjC,IAAa,IAAI,CAAE,IAAmB;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,IAAI,OAAO,KAAM,OAAO,IAAI,CAAC,YAAY,EAAC,CAAC;IAC3C,IAAa,OAAO,CAAE,OAAc;QAClC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAC9B,CAAC;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;QCT7B,6EAEE;QAAA,qEAEE;QAAA,0GACE;QAMJ,4DAAK;QAEP,4DAAU;;QAXJ,0DAA+C;QAA/C,qHAA+C;QAE7C,0DAAyB;QAAzB,8EAAyB;;6FDKpB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAWE,mDAAK;;kBAKL,mDAAK;;;;;;;;;;;;;;AExBR;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICW9C,uEAA0B;IAAA,+EAAoB;IAAA,4DAAI;;ADK/C,MAAM,oBAAoB;IAI/B;IAAe,CAAC;IAEhB,QAAQ;IAER,CAAC;;wFARU,oBAAoB;oGAApB,oBAAoB;QChBjC,yEACE;QAAA,yEACE;QAAA,uEACE;QAAA,oEACF;QAAA,4DAAI;QACN,4DAAM;QAGN,+EAA4D;QAE5D,4MACE;QAEJ,4DAAM;;;QALY,0DAA0B;QAA1B,0EAA0B;;6FDQ/B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAyD;;;;ICCzD,yEACI;IAAA,8DAEI;IAFJ,yEAEI;IAAA,0EACA;IAAA,wEAGA;IAAA,wEAGA;IAAA,4DAAO;IACP,0EACA;IAAA,wEAGA;IAAA,wEAGA;IAAA,4DAAO;IACP,2EACA;IAAA,yEAGA;IAAA,0EAGA;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAM;;;IAEN,0EACI;IAAA,mEAAqD;IACrD,wEAAsB;IAAA,kFAAuB;IAAA,4DAAI;IACrD,4DAAM;;;AD3BC,MAAM,yBAAyB;IAKpC;IAAiB,CAAC;IAElB,QAAQ;IACR,CAAC;;kGARU,yBAAyB;yGAAzB,yBAAyB;;QCNtC,sHACI;QA6BJ,qHACI;QAGJ,6DAAY;;QAlCQ,6EAAe;QA8BhB,0DAAa;QAAb,2EAAa;;6FDxBnB,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAE,oCAAoC,CAAE;aACpD;;kBAGE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAkD;;AAO3C,MAAM,mBAAmB;IAE9B;IAAiB,CAAC;IAElB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEAAQ;QAAA,+DAAI;QAAA,4DAAS;;6FDOR,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAE,8BAA8B,CAAE;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;ICA/E,0EAAyD;IAAA,uDAAS;IAAA,4DAAO;;;IAArD,qFAAyB;IAAY,0DAAS;IAAT,6EAAS;;;IAiB1D,+DAA2D;;;IAApC,oGAA+B;;;;IAb5D,wEAKE;IAAA,wEACE;IAAA,2EAMA;IAJO,wVAAmB;IAF1B,4DAMA;IAAA,uEACE;IAAA,uHAAuD;IACvD,uDACF;IAAA,4DAAO;IACT,4DAAQ;IAEV,4DAAK;;;;IAfA,4FAAoC;IAI9B,0DAAgB;IAAhB,gFAAgB;IAKjB,0DAA4C;IAA5C,iHAA4C;IAC7C,0DAAmB;IAAnB,gFAAmB;IACtB,0DACF;IADE,2FACF;;ADLC,MAAM,0BAA0B;IAUrC;QARA,YAAO,GAAG,EAAE,CAAC;QAEJ,UAAK,GAAG,EAAE,CAAC;QACX,YAAO,GAAmB,EAAE,CAAC;QAC7B,UAAK,GAAG,EAAE,CAAC;QAEV,gBAAW,GAAwB,IAAI,0DAAY,EAAU,CAAC;IAEvD,CAAC;IAElB,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,cAAc,CAAE,MAAU;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;;oGAlBU,0BAA0B;0GAA1B,0BAA0B;QCdvC,wHAAyD;QAEzD,wEAEE;QAAA,oHAKE;QAeJ,4DAAK;;QAxBC,2EAAa;QAIb,0DAA8B;QAA9B,gFAA8B;;6FDUvB,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAE,sCAAsC,CAAE;aACtD;;kBAKE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBAEL,oDAAM;;;;;;;;;;;;;;AEtBT;AAAA;AAAA;AAAyD;;AAOlD,MAAM,oBAAoB;IAK/B;QAFA,YAAO,GAAG,GAAG,CAAC;IAEC,CAAC;IAEhB,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACpD,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;;wFAXU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACI;QAAA,0EAAoB;QAAA,uDAAW;QAAA,4DAAO;QACtC,oEAAoD;QACpD,0EAA2B;QAAA,uDAAa;QAAA,4DAAO;QACnD,4DAAM;;QAHkB,0DAAW;QAAX,0EAAW;QACb,0DAA2B;QAA3B,mFAA2B;QAClB,0DAAa;QAAb,4EAAa;;6FDI/B,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAEE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAA;AAA+E;;;;;;ICIvE,wEAII;IADA,iWAA8B;IAC9B,uDACJ;IAAA,4DAAK;;;;IAHD,oLAAkD;IAElD,0DACJ;IADI,4FACJ;;ADDD,MAAM,kBAAkB;IAO7B;QANS,aAAQ,GAAoB,EAAE,CAAC;QAC/B,oBAAe,GAAG,CAAC,CAAC;QACpB,kBAAa,GAAoB,IAAI,CAAC;QACtC,6BAAwB,GAA2B,IAAI,CAAC;QACvD,kBAAa,GAAG,IAAI,0DAAY,EAAmB,CAAC;IAE7C,CAAC;IAElB,QAAQ,KAAW,CAAC;IAEpB,sCAAsC;IACtC,IAAI,SAAS;;QACX,OAAO,WAAI,CAAC,QAAQ,0CAAE,MAAM,EAC1B,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;IACjC,CAAC;IAED,mFAAmF;IACnF,qEAAqE;IACrE,IAAI,eAAe;;QACjB,IAAI,QAAC,IAAI,CAAC,QAAQ,0CAAE,MAAM,GAAE;YAC1B,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;SACnC;QAED,OAAO,IAAI,CAAC,aAAa,KAAK,IAAI;YAChC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;IAClI,CAAC;IAED,2BAA2B;IAC3B,QAAQ,CAAE,KAAsB;QAC9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;;oFAtCU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACI;QAAA,yEAAkC;QAAA,uDAAqB;QAAA,4DAAM;QAC7D,uEAA2C;QAAA,8EAAmB;QAAA,4DAAI;QAClE,wEACI;QAAA,4GAII;QAER,4DAAK;QACT,4DAAM;;QAVgC,0DAAqB;QAArB,oFAAqB;QAE1B,0DAAwC;QAAxC,gGAAwC;QAE7D,0DAA6B;QAA7B,iFAA6B;;6FDG5B,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAE,6BAA6B,CAAE;aAC7C;;kBAEE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEbT;AAAA;AAAA;AAAA;AAAA;AAAyD;AACI;AAEnB;;AAE1C,oDAAW,CAAC,qEAAW,CAAC,MAAM,CAAC,CAAC;AAKzB,MAAM,kBAAkB;IAE7B;IAAe,CAAC;IAEhB,WAAW,CAAC,KAAS;QACnB,IAAI,qEAAW,CAAC,UAAU,KAAK,IAAI,EAAE;YACnC,MAAM,OAAO,GAAG,gEAAuB,CAAC,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC;YACtE,gEAAuB,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;SACtC;QACD,MAAM,KAAK,CAAC;IACd,CAAC;;oFAVU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AACF;AACK;AAEe;AACU;AACiB;AAClB;AACuB;AAC1B;AACS;AACH;AACd;;AAiCxD,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAlBxB;YACP,4DAAY;YACZ,0DAAW;YACX,4DAAY;YACZ,+DAAgB;SACjB;mIAaU,sBAAsB,mBA5B/B,6EAAgB;QAChB,uFAAoB;QACpB,wGAAyB;QACzB,sFAAmB;QACnB,6GAA0B;QAC1B,oFAAkB;QAClB,6FAAqB;QACrB,0FAAoB;QACpB,4EAAgB,aAGhB,4DAAY;QACZ,0DAAW;QACX,4DAAY;QACZ,+DAAgB,aAGhB,6EAAgB;QAChB,uFAAoB;QACpB,wGAAyB;QACzB,sFAAmB;QACnB,6GAA0B;QAC1B,oFAAkB;QAClB,6FAAqB;QACrB,0FAAoB;QACpB,4EAAgB;6FAGP,sBAAsB;cA9BlC,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,6EAAgB;oBAChB,uFAAoB;oBACpB,wGAAyB;oBACzB,sFAAmB;oBACnB,6GAA0B;oBAC1B,oFAAkB;oBAClB,6FAAqB;oBACrB,0FAAoB;oBACpB,4EAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,4DAAY;oBACZ,+DAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,6EAAgB;oBAChB,uFAAoB;oBACpB,wGAAyB;oBACzB,sFAAmB;oBACnB,6GAA0B;oBAC1B,oFAAkB;oBAClB,6FAAqB;oBACrB,0FAAoB;oBACpB,4EAAgB;iBACjB;aACF;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAA+E;;;;AAOxE,MAAM,qBAAqB;IAMhC;QALS,kBAAa,GAAG,KAAK,CAAC;QACrB,eAAU,GAAG,IAAI,0DAAY,EAAW,CAAC;QAKjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;IACrC,CAAC;IAED,QAAQ,KAAW,CAAC;IAEpB,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;;0FAfU,qBAAqB;qGAArB,qBAAqB;QCPlC,yEAAoF;QAAzD,0IAAS,aAAS,IAAC;QAAgC,4DAAM;;QAArC,wJAA8B;;6FDOhE,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAE,gCAAgC,CAAE;aAChD;;kBAEE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AETT;AAAA;AAAA;AAAyD;;;AAOlD,MAAM,gBAAgB;IAG3B;QAFS,SAAI,GAAG,EAAE,CAAC;IAEH,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFANU,gBAAgB;gGAAhB,gBAAgB;;QCP7B,yEACI;QAAA,6DAAY;QAChB,4DAAM;;QAFe,iFAAwB;;6FDOhC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAEE,mDAAK;;;;;;;;;;;;;;;;;;;;;;AERmC;AAED;AAGyC;;;AAK5E,MAAM,WAAW;IAyBtB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAvBnC,iBAAY,GAAmB;YAC7B,QAAQ,EAAE,6DAAe;YACzB,YAAY,EAAE,2DAAa;YAC3B,eAAe,EAAE,gEAAkB;SACpC,CAAC;QAEF,gBAAW,GAAQ;YACjB,WAAW,EAAE,kBAAkB;YAC/B,WAAW,EAAE,cAAc;YAC3B,KAAK,EAAE,kBAAkB;YACzB,MAAM,EAAE,CAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAE;YAC1D,EAAE,EAAE,kBAAkB;YACtB,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;YAClD,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,MAAM;YAChB,MAAM,EAAE;gBACN,gBAAgB,EAAE,CAAC,IAAI,CAAC;gBACxB,cAAc,EAAE,CAAC,EAAE,CAAC;aACrB;SACF;IAIqC,CAAC;IAEjC,EAAE;;YAEN,gDAAgD;YAChD,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO,IAAI,CAAC,IAAI,CAAC;YAEhC,IAAI;gBAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;gBAE7B,4DAA4D;gBAE5D,4BAA4B;gBAC5B,mBAAmB;gBACnB,6BAA6B;gBAC7B,iCAAiC;gBACjC,MAAM;aAEP;YAAC,OAAO,KAAK,EAAE;gBAEd,oDAAoD;gBACpD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG;oBAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;gBAEvD,wBAAwB;gBACxB,uDAAc,CAAC,IAAI,CAAC,CAAC;aAEtB;YAED,OAAO,IAAI,CAAC,IAAI,CAAC;QAEnB,CAAC;KAAA;IAED,IAAI,WAAW;QAEb,4BAA4B;QAC5B,IAAI,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC;QAElC,sCAAsC;QACtC,IAAI,cAAc,IAAI,MAAM,EAAE;YAC5B,MAAM,UAAU,GAAU,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC/D,IAAI,UAAU,EAAE;gBACd,IAAI;oBAEF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;oBACpC,OAAO,IAAI,CAAC,KAAK,CAAC;iBAEnB;gBAAC,OAAO,KAAK,EAAE;oBACd,6DAAoB,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,4CAA4C,EAAE,KAAK,EAAE,wDAAe,CAAC,KAAK,EAAE,CAAC,CAAC;oBAChI,gEAAuB,CAAC,KAAK,CAAC,CAAC;oBAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACtB;aACF;SACF;QAED,6BAA6B;QAC7B,OAAO,IAAI,CAAC,YAAY,CAAC;IAE3B,CAAC;IAED,iBAAiB,CAAE,KAAqB;QAEtC,cAAc;QACd,IAAI,CAAC,KAAK,mCAAQ,IAAI,CAAC,WAAW,GAAK,KAAK,CAAE,CAAC;QAE/C,qCAAqC;QACrC,IAAI,cAAc,IAAI,MAAM,EAAE;YAE5B,IAAI;gBAEF,+CAA+C;gBAC/C,qEAAqE;gBACrE,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;aAElD;YAAC,OAAO,KAAK,EAAE;gBACd,6DAAoB,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,yCAAyC,EAAE,KAAK,EAAE,wDAAe,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC7H,gEAAuB,CAAC,KAAK,CAAC,CAAC;gBAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;SACF;IACH,CAAC;;sEA1GU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,oBAAoB;IAE/B;IAAiB,CAAC;IAElB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QCPjC,uEAAoB;QAAA,gEAAK;QAAA,4DAAI;;6FDOhB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAE,+BAA+B,CAAE;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B;IAAiB,CAAC;IAElB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,uEAAoB;QAAA,8DAAG;QAAA,4DAAI;;6FDOd,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAE,6BAA6B,CAAE;aAC7C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,uEAAoB;QAAA,+DAAI;QAAA,4DAAI;;6FDOf,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAC3C;;;;;;;;;;;;;;;;ICQrB,kEAA2E;;;IAAjC,gFAA4B;;;IAEtE,uEAA+C;IAAA,sEAAW;IAAA,4DAAI;;;IAJlE,qEACE;IAAA,uEACE;IAAA,mHAAuE;IACvE,wEAAmB;IAAnB,+DAAmB;IAAe,qEAAe;IACjD,mHAA+C;IACjD,4DAAI;IACN,4DAAK;;;IALA,0DAAwB;IAAxB,qFAAwB;IACtB,0DAAiB;IAAjB,+EAAiB;IACc,0DAAe;IAAf,sEAAe;IAAf,4DAAe;IAC9C,0DAAoB;IAApB,kFAAoB;;ADR/B,MAAM,OAAO,GAAG;IACd;QACE,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,wBAAwB;KAC/B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,eAAe;KACtB;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,iBAAiB;QACvB,IAAI,EAAE,gBAAgB;QACtB,OAAO,EAAE;YACP;gBACE,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,cAAc;aACrB;SACF;KACF;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,uBAAuB;KAC9B;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,mBAAmB;KAC1B;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,WAAW;KAClB;CACF,CAAC;AAOK,MAAM,sBAAsB;IAEjC;QADA,YAAO,GAAG,OAAO,CAAC;QAGR,kBAAa,GAAG,IAAI,0DAAY,EAAW,CAAC;IAFrC,CAAC;IAIlB,QAAQ,KAAK,CAAC;IAEd,cAAc,CAAE,KAAK;QACnB,IAAI,kDAAG,CAAC,KAAK,EAAE,gBAAgB,CAAC,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC/C;IACH,CAAC;;4FAZU,sBAAsB;sGAAtB,sBAAsB;QC/CnC,yEAEE;QAAA,2EACE;QAAA,2EACF;QADyB,mJAAS,0BAAsB,IAAC,uFAAW,CAAC,IAAZ;QAAvD,4DACF;QAAA,4DAAQ;QAER,wEACE;QAAA,gHACE;QAMJ,4DAAK;QAEL,6EAAmC;QAEnC,4EAAiC;QAEjC,8EAAqC;QAEvC,4DAAM;;QAfE,0DAA4B;QAA5B,gFAA4B;;6FDwCvB,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAE,iCAAiC,CAAE;aACjD;;kBAKE,oDAAM;;;;;;;;;;;;;;AEnDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACA;AAEO;AAC6B;AACZ;AACM;;AAiBtE,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBARd;YACP,4DAAY;YACZ,4DAAY;SACb;mIAKU,YAAY,mBAbrB,kEAAa;QACb,+FAAsB;QACtB,mFAAkB;QAClB,yFAAoB,aAGpB,4DAAY;QACZ,4DAAY,aAGZ,+FAAsB;6FAGb,YAAY;cAfxB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kEAAa;oBACb,+FAAsB;oBACtB,mFAAkB;oBAClB,yFAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,+FAAsB;iBACvB;aACF;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,MAAM,GAA8B;IAC/C,CAAC,EAAG,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,qBAAqB,EAAE,MAAM,EAAE,aAAa,EAAE;IAChF,CAAC,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,aAAa,EAAE;IACtE,CAAC,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa,EAAE;IAChE,CAAC,EAAG,EAAE,IAAI,EAAE,sBAAsB,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,aAAa,EAAE;IACnF,CAAC,EAAG,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE;IACrE,CAAC,EAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE;IAC9D,CAAC,EAAG,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE;IAC1E,CAAC,EAAG,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,EAAE,aAAa,EAAE;IAC1E,CAAC,EAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,aAAa,EAAE;IACpE,CAAC,EAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE;IAC1D,EAAE,EAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa,EAAE;IAC/D,EAAE,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE;IAChE,EAAE,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE;IAC7D,EAAE,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,aAAa,EAAE;IACvE,EAAE,EAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,aAAa,EAAE;IAC9E,EAAE,EAAG,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,0BAA0B,EAAE,MAAM,EAAE,aAAa,EAAE;IACnF,EAAE,EAAG,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE;IACxE,EAAE,EAAG,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,aAAa,EAAE;IAC3E,EAAE,EAAG,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,aAAa,EAAE;IACnE,EAAE,EAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE;IAC/D,EAAE,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,yBAAyB,EAAE,MAAM,EAAE,aAAa,EAAE;IAChF,EAAE,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,yBAAyB,EAAE,MAAM,EAAE,aAAa,EAAE;IAChF,EAAE,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,yBAAyB,EAAE,MAAM,EAAE,aAAa,EAAE;IAChF,EAAE,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,yBAAyB,EAAE,MAAM,EAAE,aAAa,EAAE;IAChF,EAAE,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,yBAAyB,EAAE,MAAM,EAAE,aAAa,EAAE;CACjF,CAAC;AAMK,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAY3B,MAAM,MAAM;CAGlB;AAOM,MAAM,UAAU,GAAkC;IACvD,CAAC,EAAG,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE;IAC7C,CAAC,EAAG,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE;IAC3C,CAAC,EAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE;IACtC,CAAC,EAAG,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,SAAS,EAAE;IAC9C,CAAC,EAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE;IACxC,CAAC,EAAG,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE;IACtC,CAAC,EAAG,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE;IAC3C,CAAC,EAAG,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;CAC1C,CAAC;AAQK,MAAM,SAAS,GAAgB;IACpC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE;IAC7C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;IAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE;IAClD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;IAChD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAC7C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE;IAChD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE;IAClD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;IAChD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE;IAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE;IAClD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;CAChD,CAAC;AAOK,MAAM,WAAW,GAAG;IACzB,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE;IAC9C,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;IAC5C,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE;CAC5C,CAAC;AAEK,MAAM,oBAAoB,GAAG,SAAS,CAAC;AAE9C,yBAAyB;AAClB,MAAM,aAAa,GAAG,CAAC,CAAC;AAE/B,sCAAsC;AAC/B,MAAM,eAAe,GAAG,IAAI,CAAC;AAEpC,4CAA4C;AACrC,MAAM,kBAAkB,GAAG,YAAY,CAAC;;;;;;;;;;;;;AC9H/C;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,6DAA6D;IACzE,MAAM,EAAE;QACN,GAAG,EAAE,4DAA4D;QACjE,WAAW,EAAE,aAAa;QAC1B,YAAY,EAAE;YACZ,8BAA8B;SAC/B;KACF;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACvBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { InjectionToken, ɵɵinject, ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, Optional, Inject, ɵɵdefineNgModule, ɵɵdefineInjector, NgModule, SkipSelf } from '@angular/core';\nimport { HttpUrlEncodingCodec, HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nclass CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k) {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v) {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\nconst BASE_PATH = new InjectionToken('basePath');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass Configuration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    selectHeaderAccept(accepts) {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n\n/**\n * Classify text into risk scores\n * Will take text and classify it via risk\n *\n * OpenAPI spec version: 2.0.1\n * Contact: support@twohat.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */ /* tslint:disable:no-unused-variable member-ordering */\nclass DefaultService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = 'https://virtserver.swaggerhub.com/twohat/classifyText/2.0.1';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new Configuration();\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    canConsumeForm(consumes) {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n    classifyLanguage(observe = 'body', reportProgress = false) {\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [\n            'application/json'\n        ];\n        return this.httpClient.request('post', `${this.basePath}/classify/language`, {\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    classifyText(body, extended, observe = 'body', reportProgress = false) {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (extended !== undefined && extended !== null) {\n            queryParameters = queryParameters.set('extended', extended);\n        }\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        return this.httpClient.request('post', `${this.basePath}/classify/text`, {\n            body: body,\n            params: queryParameters,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    classifyTextBulk(body, extended, observe = 'body', reportProgress = false) {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (extended !== undefined && extended !== null) {\n            queryParameters = queryParameters.set('extended', extended);\n        }\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        return this.httpClient.request('post', `${this.basePath}/classify/textBulk`, {\n            body: body,\n            params: queryParameters,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    statusGet(observe = 'body', reportProgress = false) {\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [];\n        return this.httpClient.request('get', `${this.basePath}/status`, {\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n}\nDefaultService.ɵfac = function DefaultService_Factory(t) { return new (t || DefaultService)(ɵɵinject(HttpClient), ɵɵinject(BASE_PATH, 8), ɵɵinject(Configuration, 8)); };\nDefaultService.ɵprov = ɵɵdefineInjectable({ token: DefaultService, factory: DefaultService.ɵfac });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(DefaultService, [{\n        type: Injectable\n    }], function () { return [{ type: HttpClient }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [BASE_PATH]\n            }] }, { type: Configuration, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\nconst APIS = [DefaultService];\n\nvar TextInput;\n(function (TextInput) {\n    TextInput.ContentTypeEnum = {\n        SHORTTEXT: 'SHORT_TEXT',\n        LONGTEXT: 'LONG_TEXT',\n        USERNAME: 'USERNAME'\n    };\n})(TextInput || (TextInput = {}));\n\nclass ApiModule {\n    constructor(parentModule, http) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: ApiModule,\n            providers: [{ provide: Configuration, useFactory: configurationFactory }]\n        };\n    }\n}\nApiModule.ɵmod = ɵɵdefineNgModule({ type: ApiModule });\nApiModule.ɵinj = ɵɵdefineInjector({ factory: function ApiModule_Factory(t) { return new (t || ApiModule)(ɵɵinject(ApiModule, 12), ɵɵinject(HttpClient, 8)); }, providers: [\n        DefaultService\n    ], imports: [[]] });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ApiModule, [{\n        type: NgModule,\n        args: [{\n                imports: [],\n                declarations: [],\n                exports: [],\n                providers: [\n                    DefaultService\n                ]\n            }]\n    }], function () { return [{ type: ApiModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: HttpClient, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APIS, ApiModule, BASE_PATH, COLLECTION_FORMATS, Configuration, DefaultService, TextInput };\n//# sourceMappingURL=classify-text-swagger-client.js.map\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./modules/generic-view/generic-view.module').then(m => m.GenericViewModule),\n    data: { breadcrumb: '' }\n  },\n  {\n    path: 'filter-quality',\n    data: { breadcrumb: 'Filter Quality' },\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'audit-rules'\n      },\n      {\n        path: 'audit-rules',\n        data: { breadcrumb: 'Audit Rules' },\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'diagnose'\n          },\n          {\n            path: 'diagnose',\n            loadChildren: () => import('./modules/diagnose/diagnose.module').then(m => m.DiagnoseModule),\n            data: { breadcrumb: 'Diagnose' },\n          }\n        ],\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'modtools-app';\n}\n","<app-main-header></app-main-header>\n\n<app-sub-navigation></app-sub-navigation>\n\n<main>\n  <router-outlet></router-outlet>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\nimport { ApiModule as ApiClassifyTextModule, BASE_PATH } from 'classify-text-swagger-client';\nimport { environment } from 'src/environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './main/main.module';\nimport { SubnavModule } from './subnav/subnav.module';\n\nimport { SentryErrorHandler } from 'src/app/shared-components/sentry.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MainModule,\n    SubnavModule,\n    BreadcrumbModule,\n    HttpClientModule,\n    ApiClassifyTextModule,\n  ],\n  providers: [\n    { provide: ErrorHandler, useClass: SentryErrorHandler },\n    { provide: BASE_PATH, useValue: environment.apiBaseUrl },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-a11y-flyout',\n  templateUrl: './a11y-flyout.component.html',\n  styleUrls: [ './a11y-flyout.component.less' ]\n})\nexport class A11yFlyoutComponent {\n\n  constructor () { }\n\n}\n","<!-- TODO: Icon buttons per the design -->\n<button i18n class=\"disabled\">ACCESSIBILITY</button>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SelectBoxItem, DefaultClient } from 'src/constants';\n\ninterface Client {\n  id:number;\n  name:string;\n}\n\n@Component({\n  selector: 'app-client-picker',\n  templateUrl: './client-picker.component.html',\n  styleUrls: [ './client-picker.component.less' ]\n})\nexport class ClientPickerComponent {\n\n  @Input() selectedClient = DefaultClient;\n  @Output() clientChanged = new EventEmitter<number>();\n\n  // TODO: This needs to be externally sourced\n  clients:Client[] = [\n    { id: 60, name: 'Live' },\n    { id: 61, name: 'Sandbox' },\n    { id: 0, name: 'Community Sift' }\n  ]\n\n  selectBoxList: SelectBoxItem[] = this.clients.map(client => ({\n    content: client.name,\n    value: client.id\n  }))\n\n  constructor () { }\n\n  onClientChanged (selectedValue: number) {\n    this.clientChanged.emit(selectedValue);\n  }\n\n}\n","<app-select-box\n    [listData]=\"selectBoxList\"\n    [selectedValue]=\"selectedClient\"\n    (selectChanged)=\"onClientChanged($event)\"\n></app-select-box>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared-components/user.service';\nimport { User } from 'src/app/shared-components/user';\nimport { DefaultLanguage } from 'src/constants';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './header.component.html',\n  styleUrls: [ './header.component.less' ]\n})\nexport class HeaderComponent implements OnInit {\n  defaultLanguage = DefaultLanguage;\n  user:User\n\n  constructor (public userService:UserService) { }\n\n  async ngOnInit () {\n    this.user = await this.userService.me();\n  }\n\n  onUserChangedLanguage (newLanguage:string) {\n    // Todo: Update language of page\n    console.log('[HeaderComponent] onUserChangedLanguage get newLanguage:', newLanguage);\n  }\n\n}\n","<header class=\"main\">\n\n  <app-main-logo></app-main-logo>\n  \n  <app-main-search></app-main-search>\n\n  <app-language-picker [selectedLanguage]=\"defaultLanguage\"\n                   (languageChanged)=\"onUserChangedLanguage($event)\"\n  ></app-language-picker>\n  \n  <app-a11y-flyout></app-a11y-flyout>\n  \n  <app-user-flyout></app-user-flyout>\n\n</header>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { sortBy } from 'lodash';\n\nimport { Language, Languages, SelectBoxItem } from 'src/constants';\n\nenum type {\n  name = 'name',\n  code = 'code'\n}\n\n@Component({\n  selector: 'app-language-picker',\n  templateUrl: './language-picker.component.html',\n  styleUrls: [ './language-picker.component.less' ]\n})\nexport class LanguagePickerComponent implements OnInit {\n  // type of selectedValue: Language name or\n  @Input() type: type = type.name;\n  @Input() selectedLanguage = 'en';\n  @Output() languageChanged = new EventEmitter<string>();\n\n  languages: Language[] = [];\n  selectBoxList: SelectBoxItem[] = [];\n  transformSelectedContent: (value: any) => string = null;\n\n  constructor () { }\n\n  // Todo: Apply some logic to show allowed language by user account\n  // constructor (private userService: UserService) { }\n\n  async ngOnInit () {\n    // Get the current user\n    // const user = await this.userService.me();\n\n    // Filter the user's languages by the ones they're allowed to use\n    // if (user?.config?.allowedLanguages) {\n    //   this.languages = Languages.filter(lang =>\n    //     user.config.allowedLanguages.includes(lang.code)\n    //   );\n    // }\n\n    // Dummy languages for now\n    this.languages = Languages;\n\n    // Sort by language name, not code.\n    this.languages = sortBy(this.languages, 'name');\n\n    // get selectBoxList from languages\n    this.selectBoxList = this.languages.map(language => ({\n      content: language.name,\n      value: language.code\n    }));\n\n    // transform selected content of select box\n    // TODO: add more transform function here\n    if (this.type === type.code) {\n      this.transformSelectedContent = value => {\n        const currentItem: Language = this.languages.find(\n          item => item.code === value\n        );\n        return currentItem?.code;\n      };\n    }\n  }\n\n  /**\n   * Fired when the user changes their language\n   */\n  onLanguageChanged (languageCode: string) {\n    this.languageChanged.emit(languageCode);\n  }\n}\n","<app-select-box\n    [listData]=\"selectBoxList\"\n    [selectedValue]=\"selectedLanguage\"\n    [transformSelectedContent]=\"transformSelectedContent\"\n    (selectChanged)=\"onLanguageChanged($event)\"\n></app-select-box>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: [ './logo.component.less' ]\n})\nexport class LogoComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<!-- TODO: Link to app root -->\n\n<a routerLink=\"/\">\n  <img class=\"logo\" src=\"/assets/community_sift-logo-rgb_official_copy.svg\">\n</a>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { SharedComponentsModule } from '../shared-components/shared-components.module';\n\nimport { LogoComponent } from './logo/logo.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SearchComponent } from './search/search.component';\nimport { LanguagePickerComponent } from './language-picker/language-picker.component';\nimport { A11yFlyoutComponent } from './a11y-flyout/a11y-flyout.component';\nimport { UserFlyoutComponent } from './user-flyout/user-flyout.component';\nimport { ClientPickerComponent } from './client-picker/client-picker.component';\nimport { TopicPickerComponent } from './topic-picker/topic-picker.component';\n\n@NgModule({\n  declarations: [\n    LogoComponent,\n    HeaderComponent,\n    SearchComponent,\n    LanguagePickerComponent,\n    A11yFlyoutComponent,\n    UserFlyoutComponent,\n    ClientPickerComponent,\n    TopicPickerComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    SharedComponentsModule\n  ],\n  exports: [\n    HeaderComponent,\n    LanguagePickerComponent,\n    ClientPickerComponent,\n    TopicPickerComponent,\n  ]\n})\nexport class MainModule { }\n","/* eslint-disable no-unused-vars */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DiagnoseSearchParams } from 'src/constants';\n\nconst ENTER_KEY_CODE = 13;\nconst DIAGNOSE_URL = '/filter-quality/audit-rules/diagnose';\n\n@Component({\n  selector: 'app-main-search',\n  templateUrl: './search.component.html',\n  styleUrls: [ './search.component.less' ]\n})\nexport class SearchComponent implements OnInit {\n  keyWord = '';\n\n  constructor (\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    // initialize keyword value by url\n    this.route.queryParams.subscribe(params => {\n      let keyWord = '';\n      if (params.hasOwnProperty(DiagnoseSearchParams)) {\n        keyWord = params[DiagnoseSearchParams];\n      }\n\n      this.keyWord = keyWord;\n    });\n  }\n\n  ngOnInit () {\n  }\n\n  // binding Enter press to onSearch()\n  onKey ($event) {\n    if ($event.keyCode === ENTER_KEY_CODE && this.keyWord.trim()) {\n      this.onSearch();\n    }\n  }\n\n  onSearch () {\n    this.router.navigate([ DIAGNOSE_URL ], {\n      queryParams: {\n        [DiagnoseSearchParams]: this.keyWord\n      }\n    });\n  }\n}\n","<div class=\"search-wrapper\">\n    <input type=\"search\" placeholder=\"Search for keywords, phrases, etc.\" i18n-placeholder [(ngModel)]=\"keyWord\" (keyup)=\"onKey($event)\">\n    <i class=\"material-icons search-icon\">search</i>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Topic, TopicPickerSelected, Topics } from 'src/constants';\nimport { KeyValue } from '@angular/common';\n\nconst defaultTitle = 'Add more topics';\nconst hoverTitle = 'Choose Topic';\n\n@Component({\n  selector: 'app-topic-picker',\n  templateUrl: './topic-picker.component.html',\n  styleUrls: [ './topic-picker.component.less' ]\n})\nexport class TopicPickerComponent implements OnInit {\n  title: string = defaultTitle;\n  topics: { [key: string]: Topic } = Topics;\n  selecteds: { [key: string]: any } = {};\n\n  @Input() maximumItemShow = 8;\n  @Input() topicSelected: { [key: string]: any } = {};\n  @Output() _onSelectChanged = new EventEmitter<TopicPickerSelected>();\n  constructor () { }\n\n  ngOnInit (): void {\n    // add selected topic on @Input to memo\n    for (const topicNumber in this.topics) {\n      if (this.topicSelected.hasOwnProperty(topicNumber)) {\n        this.selecteds[topicNumber] = this.topics[topicNumber];\n      }\n    }\n  }\n\n  // Handle event mouse enter\n  onMouseEnter () {\n    this.title = hoverTitle;\n  }\n\n  // Handle event mouse leave\n  onMouseLeave () {\n    this.title = defaultTitle;\n  }\n\n  // Handle select & unSelect item\n  onSelect (topicNumber: string, topic: Topic): void {\n    if (this.selecteds.hasOwnProperty(topicNumber)) {\n      delete this.selecteds[topicNumber];\n    } else {\n      this.selecteds[topicNumber] = topic;\n    }\n\n    // Event emit\n    this._onSelectChanged.emit(this.selecteds);\n  }\n\n  // check a topic is selected\n  isSelected (topicNumber: string): boolean {\n    return this.selecteds.hasOwnProperty(topicNumber);\n  }\n\n  originalOrder = (a: KeyValue<string, Topic>, b: KeyValue<string, Topic>): number => {\n    return 0;\n  }\n}\n","<div class=\"select-box\" (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\">\n    <div class=\"select-box__selected\">{{ title }}</div>\n    <i class=\"material-icons select-box__icon\">keyboard_arrow_down</i>\n    <ul class=\"select-box__list\" [style.--data-maximum]=\"maximumItemShow\">\n        <li class=\"select-box__item\"\n            *ngFor=\"let topic of topics | keyvalue: originalOrder\"\n            [ngClass]=\"{'active': isSelected(topic.key)}\"\n            (click)=\"onSelect(topic.key, topic.value)\">\n            {{ topic.value.name }}\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../../shared-components/user';\nimport { UserService } from '../../shared-components/user.service';\n\n@Component({\n  selector: 'app-user-flyout',\n  templateUrl: './user-flyout.component.html',\n  styleUrls: ['./user-flyout.component.less']\n})\nexport class UserFlyoutComponent implements OnInit {\n\n  currentUser:User;\n\n  constructor(private userService:UserService) { }\n\n  async ngOnInit() {\n\n    this.currentUser = await this.userService.me()\n\n  }\n\n}\n","<button *ngIf=\"currentUser\" class=\"disabled\">\n  <img src=\"{{ currentUser.photos[0].value }}\"\n       alt=\"Profile picture for {{ currentUser.displayName }}\"\n       *ngIf=\"currentUser.photos && currentUser.photos.length\"\n       aria-hidden=\"true\" />\n  <span>{{ currentUser.name.givenName }}</span>\n</button>\n\n<button *ngIf=\"!currentUser\"><i class=\"mdi mdi-account-off\"></i></button>","import { Component, OnInit, Input } from '@angular/core';\nimport { IAppGridItem } from './iapp-grid-item';\n\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './app-grid.component.html',\n  styleUrls: ['./app-grid.component.less']\n})\nexport class AppGridComponent implements OnInit {\n\n  _apps:IAppGridItem[] = []\n  _gridColumns = 4\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  get apps () { return this._apps }\n  @Input() set apps (apps:IAppGridItem[]) {\n    this._apps = apps;\n  }\n\n  get columns () { return this._gridColumns }\n  @Input() set columns (columns:number) {\n    this._gridColumns = columns;\n  }\n\n}\n","<section class=\"app-grid\">\n\n  <ol class=\"apps-list grid-columns-{{_gridColumns}}\">\n    \n    <li *ngFor=\"let app of _apps\">\n      <a routerLink=\"{{app.url}}\">\n        <i class=\"material-icons\">{{app.icon}}</i>\n        {{app.text}}\n      </a>\n    </li>\n\n  </ol>\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\n// import { checkServerIdentity } from 'tls';\n\ninterface IBreadcrumb {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.less']\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n  public breadcrumbs: IBreadcrumb[];\n\n  constructor() {}\n\n  ngOnInit () {\n\n  }\n\n}\n","<div class=\"breadcrumb\">\n  <div class=\"breadcrumb__icon\">\n    <a routerLink=\"/\">\n      <img src=\"/assets/comunity_sift-logo-compact.svg\" alt=\"home\">\n    </a>\n  </div>\n\n  <!-- <xng-breadcrumb separator=\">\"></xng-breadcrumb> -->\n  <xng-breadcrumb [separator]=\"iconTemplate\"></xng-breadcrumb>\n \n  <ng-template #iconTemplate>\n    <i class=\"material-icons\">keyboard_arrow_right</i>\n  </ng-template>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-indicator',\n  templateUrl: './loading-indicator.component.html',\n  styleUrls: [ './loading-indicator.component.less' ]\n})\nexport class LoadingIndicatorComponent implements OnInit {\n\n  @Input() error:boolean;\n  @Input() loading:boolean;\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<!-- <i class=\"mdi mdi-spin mdi-loading mdi-24px\" *ngIf=\"loading\"></i> -->\n<div class=\"loader\" *ngIf=\"loading\">\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        width=\"24px\" height=\"30px\" viewBox=\"0 0 24 30\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n        <rect x=\"0\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n        <animate attributeName=\"height\" attributeType=\"XML\"\n            values=\"5;21;5\" \n            begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"10\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n        <animate attributeName=\"height\" attributeType=\"XML\"\n            values=\"5;21;5\" \n            begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"20\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n        <animate attributeName=\"height\" attributeType=\"XML\"\n            values=\"5;21;5\" \n            begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        </rect>\n    </svg>\n</div>\n\n<div class=\"error\" *ngIf=\"error\">\n    <i class=\"mdi mdi-alert-circle-outline mdi-48px\"></i>\n    <p class=\"error-text\">Somethings went wrong !</p>\n</div>\n<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-more-button',\n  templateUrl: './more-button.component.html',\n  styleUrls: [ './more-button.component.less' ]\n})\nexport class MoreButtonComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<button>More</button>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IOptionButton {\n  label?:string;\n  icon?:string;\n  value:string|number;\n  ariaLabel:string;\n}\n\n@Component({\n  selector: 'app-option-button-group',\n  templateUrl: './option-button-group.component.html',\n  styleUrls: [ './option-button-group.component.less' ]\n})\nexport class OptionButtonGroupComponent implements OnInit {\n\n  groupId = '';\n\n  @Input() label = '';\n  @Input() options:IOptionButton[] = [];\n  @Input() value = '';\n\n  @Output() valueChange:EventEmitter<string> = new EventEmitter<string>();\n\n  constructor () { }\n\n  ngOnInit () {\n    this.groupId = Math.random().toString(36).substring(2);\n  }\n\n  onValueChanged ($event:any) {\n    this.valueChange.emit($event);\n  }\n\n}\n","<span *ngIf=\"label\" [attr.aria-label]=\"label\" id=\"label\">{{label}}</span>\n\n<ul aria-labelledby=\"label\" role=\"radiogroup\">\n\n  <li *ngFor=\"let option of options\"\n       role=\"radio\"\n       tabindex=\"0\"\n       [attr.aria-label]=\"option.ariaLabel\">\n  \n    <label>\n      <input type=\"radio\"\n             [name]=\"groupId\"\n             [(ngModel)]=\"value\"\n             (ngModelChange)=\"onValueChanged($event)\"\n             [value]=\"option.value\">\n      \n      <span class=\"button {{option.icon ? 'icon' : ''}}\">\n        <i *ngIf=\"option.icon\" class=\"mdi mdi-{{option.icon}}\"></i>\n        {{option.label}}\n      </span>\n    </label>\n\n  </li>\n\n</ul>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.less']\n})\nexport class ProgressBarComponent implements OnInit {\n  @Input() label: string;\n  @Input() value: number;\n  percent = '0';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.percent = Math.round(this.value * 100) + '%';\n    }, 400)\n  }\n\n}\n","<div class=\"progress-bar\">\n    <span class=\"label\">{{ label }}</span>\n    <div class=\"line\" [style.--percent]=\"percent\"></div>\n    <span class=\"percent-text\">{{ percent }}</span>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SelectBoxItem } from 'src/constants';\n\n@Component({\n  selector: 'app-select-box',\n  templateUrl: './select-box.component.html',\n  styleUrls: [ './select-box.component.less' ]\n})\nexport class SelectBoxComponent implements OnInit {\n  @Input() listData: SelectBoxItem[] = [];\n  @Input() maximumItemShow = 8;\n  @Input() selectedValue: string | number = null;\n  @Input() transformSelectedContent: (value: any) => string = null;\n  @Output() selectChanged = new EventEmitter<string | number>();\n\n  constructor () { }\n\n  ngOnInit (): void {}\n\n  // return the first item or empty item\n  get firstItem (): SelectBoxItem {\n    return this.listData?.length\n      ? this.listData[0]\n      : { content: '', value: '' };\n  }\n\n  // if listData is null || undefined || empty just return an item with empty content\n  // return the first item if the default selectedValue have not passed\n  get currentSelected (): SelectBoxItem {\n    if (!this.listData?.length) {\n      return { content: '', value: '' };\n    }\n\n    return this.selectedValue === null\n      ? this.listData[0]\n      : this.listData.find(item => item.value === this.selectedValue);\n  }\n\n  get selectedContent () {\n    return this.transformSelectedContent ? this.transformSelectedContent(this.currentSelected.value) : this.currentSelected.content;\n  }\n\n  // emit selectChanged event\n  onSelect (value: string | number) {\n    this.selectedValue = value;\n    this.selectChanged.emit(value);\n  }\n}\n","<div class=\"select-box\">\n    <div class=\"select-box__selected\">{{ selectedContent }}</div>\n    <i class=\"material-icons select-box__icon\">keyboard_arrow_down</i>\n    <ul class=\"select-box__list\" [style.--data-maximum]=\"maximumItemShow\">\n        <li class=\"select-box__item\"\n            *ngFor=\"let item of listData\"\n            [ngClass]=\"{active: item.value === selectedValue}\"\n            (click)=\"onSelect(item.value)\">\n            {{ item.content }}\n        </li>\n    </ul>\n</div>","import { Injectable, ErrorHandler } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport * as Sentry from '@sentry/browser';\n\nSentry.init(environment.sentry);\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SentryErrorHandler implements ErrorHandler {\n\n  constructor() {}\n\n  handleError(error:any) : void {\n    if (environment.production === true) {\n      const eventId = Sentry.captureException(error.originalError || error);\n      Sentry.showReportDialog({ eventId });\n    }\n    throw error;\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\n\nimport { AppGridComponent } from './app-grid/app-grid.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { LoadingIndicatorComponent } from './loading-indicator/loading-indicator.component';\nimport { MoreButtonComponent } from './more-button/more-button.component';\nimport { OptionButtonGroupComponent } from './option-button-group/option-button-group.component';\nimport { SelectBoxComponent } from './select-box/select-box.component';\nimport { ToogleSliderComponent } from './toogle-slider/toogle-slider.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { TooltipComponent } from './tooltip/tooltip.component';\n\n\n@NgModule({\n  declarations: [\n    AppGridComponent,\n    BreadcrumbsComponent,\n    LoadingIndicatorComponent,\n    MoreButtonComponent,\n    OptionButtonGroupComponent,\n    SelectBoxComponent,\n    ToogleSliderComponent,\n    ProgressBarComponent,\n    TooltipComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    BreadcrumbModule,\n  ],\n  exports: [\n    AppGridComponent,\n    BreadcrumbsComponent,\n    LoadingIndicatorComponent,\n    MoreButtonComponent,\n    OptionButtonGroupComponent,\n    SelectBoxComponent,\n    ToogleSliderComponent,\n    ProgressBarComponent,\n    TooltipComponent,\n  ]\n})\nexport class SharedComponentsModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-toogle-slider',\n  templateUrl: './toogle-slider.component.html',\n  styleUrls: [ './toogle-slider.component.less' ]\n})\nexport class ToogleSliderComponent implements OnInit {\n  @Input() defaultActive = false;\n  @Output() _onChanged = new EventEmitter<boolean>();\n\n  public isActive: boolean;\n\n  constructor () {\n    this.isActive = this.defaultActive;\n  }\n\n  ngOnInit (): void {}\n\n  onClick () {\n    this.isActive = !this.isActive;\n    this._onChanged.emit(this.isActive);\n  }\n}\n","<div class=\"toggle-slider\" (click)=\"onClick()\" [ngClass]=\"{active: isActive}\"></div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.less']\n})\nexport class TooltipComponent implements OnInit {\n  @Input() text = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tooltip\" [attr.data-label]=\"text\">\n    <ng-content></ng-content>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as Sentry from '@sentry/browser';\n\nimport { User, UserPreferences } from './user';\nimport { DefaultLanguage, DefaultClient, DefaultContentType } from 'src/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  defaultPrefs:UserPreferences = {\n    language: DefaultLanguage,\n    lastClientId: DefaultClient,\n    lastContentType: DefaultContentType,\n  };\n\n  defaultUser:User = {\n    moderatorId: 'user@example.com',\n    displayName: 'DEFAULT USER',\n    email: 'user@example.com',\n    emails: [ { value: 'user@example.com', verified: false } ],\n    id: 'user@example.com',\n    name: { familyName: 'User', givenName: 'Default' },\n    photos: [],\n    provider: 'NONE',\n    config: {\n      allowedLanguages: ['en'],\n      allowedClients: [60]\n    }\n  }\n  prefs:UserPreferences;\n  user:User;\n\n  constructor(private http:HttpClient) {}\n\n  async me () : Promise<User> {\n\n    // If we already have a user, don't get it again\n    if (this.user) return this.user;\n\n    try {\n\n      this.user = this.defaultUser;\n\n      // this.user = await this.http.get<User>('/me').toPromise();\n\n      // // Set the user in Sentry\n      // Sentry.setUser({\n      //   email: this.user?.email,\n      //   name: this.user?.displayName\n      // });\n\n    } catch (error) {\n\n      // If we failed to get a user, return a default one.\n      if (error.status === 404) this.user = this.defaultUser;\n\n      // Unset the Sentry user\n      Sentry.setUser(null);\n\n    }\n\n    return this.user;\n\n  }\n\n  get preferences () : UserPreferences {\n\n    // Use in-memory prefs first\n    if (this.prefs) return this.prefs;\n\n    // Try getting prefs from LocalStorage\n    if ('localStorage' in window) {\n      const savedPrefs:string = window.localStorage.getItem('prefs');\n      if (savedPrefs) {\n        try {\n\n          this.prefs = JSON.parse(savedPrefs);\n          return this.prefs;\n\n        } catch (error) {\n          Sentry.addBreadcrumb({ category: 'user', message: 'Tried loading user prefs from LocalStorage', level: Sentry.Severity.Error });\n          Sentry.captureException(error);\n          console.error(error);\n        }\n      }\n    }\n\n    // Fail back to default prefs\n    return this.defaultPrefs;\n\n  }\n\n  updatePreferences (value:UserPreferences) {\n\n    // Merge prefs\n    this.prefs = { ...this.preferences, ...value };\n\n    // Serialize and save to LocalStorage\n    if ('localStorage' in window) {\n\n      try {\n\n        // Serialize and save the prefs to LocalStorage\n        // TODO: #scooter - Persist these with the user's prefs on the server\n        const savedPrefs = JSON.stringify(this.prefs);\n        window.localStorage.setItem('prefs', savedPrefs);\n\n      } catch (error) {\n        Sentry.addBreadcrumb({ category: 'user', message: 'Tried saving user prefs to LocalStorage', level: Sentry.Severity.Error });\n        Sentry.captureException(error);\n        console.error(error);\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-button',\n  templateUrl: './admin-button.component.html',\n  styleUrls: [ './admin-button.component.less' ]\n})\nexport class AdminButtonComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<a class=\"disabled\">Admin</a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-api-button',\n  templateUrl: './api-button.component.html',\n  styleUrls: [ './api-button.component.less' ]\n})\nexport class ApiButtonComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<a class=\"disabled\">API</a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subnav-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.less']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<a class=\"disabled\">Help</a>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { has } from 'lodash';\n\nconst navList = [\n  {\n    text: 'Home',\n    link: '/',\n    icon: 'view-dashboard-outline',\n  },\n  {\n    text: 'Policy Guides',\n    link: '#',\n    icon: 'book-multiple',\n  },\n  {\n    text: 'Filter Quality',\n    link: '/filter-quality',\n    icon: 'filter-outline',\n    subMenu: [\n      {\n        text: 'Audit Rules',\n        link: '/audit-rules',\n      },\n    ]\n  },\n  {\n    text: 'User Reputation',\n    link: '#',\n    icon: 'account-check-outline',\n  },\n  {\n    text: 'Reported Content',\n    link: '#',\n    icon: 'table-of-contents',\n  },\n  {\n    text: 'Transparency Reports',\n    link: '#',\n    icon: 'chart-bar',\n  },\n];\n\n@Component({\n  selector: 'app-sub-navigation',\n  templateUrl: './sub-navigation.component.html',\n  styleUrls: [ './sub-navigation.component.less' ]\n})\nexport class SubNavigationComponent implements OnInit {\n  navList = navList;\n  constructor () { }\n\n  @Output() collapseEvent = new EventEmitter<boolean>();\n\n  ngOnInit () {}\n\n  toggleCollapse (event) {\n    if (has(event, 'target.checked')) {\n      this.collapseEvent.emit(event.target.checked);\n    }\n  }\n\n}\n","<nav class='subnav'>\n\n  <label class=\"collapse-toggle disabled\">\n    <input type=\"checkbox\" (click)=\"toggleCollapse($event)\" (change)=\"0\">\n  </label>\n  \n  <ul class=\"top-level-nav\">\n    <li *ngFor=\"let item of navList\">\n      <a [routerLink]=\"item.link\">\n        <i *ngIf=\"item.icon\" class=\"nav-icon mdi\" [class]=\"'mdi-' + item.icon\"></i>\n        <ng-container i18n>{{ item.text }}</ng-container>\n        <i *ngIf=\"item.subMenu\" class=\"material-icons\">expand_more</i>\n      </a>\n    </li>\n  </ul>\n  \n  <app-subnav-help></app-subnav-help>\n  \n  <app-api-button></app-api-button>\n  \n  <app-admin-button></app-admin-button>\n\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HelpComponent } from './help/help.component';\nimport { SubNavigationComponent } from './sub-navigation/sub-navigation.component';\nimport { ApiButtonComponent } from './api-button/api-button.component';\nimport { AdminButtonComponent } from './admin-button/admin-button.component';\n\n@NgModule({\n  declarations: [\n    HelpComponent,\n    SubNavigationComponent,\n    ApiButtonComponent,\n    AdminButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    SubNavigationComponent\n  ]\n})\nexport class SubnavModule { }\n","// Note: I don't know what kind of icon font we need to use\n// So I will add font awesome class here\n// Todo: refactor the icon\nexport interface Topic {\n  name: string,\n  icon: string,\n  faIcon: string,\n}\n\nexport const Topics : { [key: string]: Topic } = {\n  0 : { name: 'General Risk', icon: 'numeric-${risk}-box', faIcon: 'fa-comments' },\n  1 : { name: 'Bullying', icon: 'account-group', faIcon: 'fa-comments' },\n  2 : { name: 'Fighting', icon: 'kabaddi', faIcon: 'fa-comments' },\n  3 : { name: 'Personal Information', icon: 'account-search', faIcon: 'fa-comments' },\n  4 : { name: 'Dating and Sexting', icon: 'heart', faIcon: 'fa-heart' },\n  5 : { name: 'Vulgar', icon: 'chat-alert', faIcon: 'fa-angry' },\n  6 : { name: 'Drugs and Alcohol', icon: 'cannabis', faIcon: 'fa-comments' },\n  7 : { name: 'In-Game Items', icon: 'cube-outline', faIcon: 'fa-comments' },\n  8 : { name: 'Alarm', icon: 'alert-decagram', faIcon: 'fa-comments' },\n  9 : { name: 'Fraud', icon: 'cash', faIcon: 'fa-comments' },\n  10 : { name: 'Racist', icon: 'whistle', faIcon: 'fa-comments' },\n  11 : { name: 'Religion', icon: 'church', faIcon: 'fa-comments' },\n  13 : { name: 'Website', icon: 'link', faIcon: 'fa-comments' },\n  14 : { name: 'Grooming', icon: 'account-child', faIcon: 'fa-comments' },\n  15 : { name: 'Public Threats', icon: 'target-account', faIcon: 'fa-comments' },\n  16 : { name: 'Real Name', icon: 'account-badge-horizontal', faIcon: 'fa-comments' },\n  17 : { name: 'Radicalization', icon: 'bullhorn', faIcon: 'fa-comments' },\n  18 : { name: 'Subversive', icon: 'guy-fawkes-mask', faIcon: 'fa-comments' },\n  19 : { name: 'Sentiment', icon: 'emoticon', faIcon: 'fa-comments' },\n  20 : { name: 'Politics', icon: 'gavel', faIcon: 'fa-comments' },\n  27 : { name: 'Custom1', icon: 'number-1-circle-outline', faIcon: 'fa-comments' },\n  28 : { name: 'Custom2', icon: 'number-2-circle-outline', faIcon: 'fa-comments' },\n  29 : { name: 'Custom3', icon: 'number-3-circle-outline', faIcon: 'fa-comments' },\n  30 : { name: 'Custom4', icon: 'number-4-circle-outline', faIcon: 'fa-comments' },\n  31 : { name: 'Custom5', icon: 'number-5-circle-outline', faIcon: 'fa-comments' },\n};\n\nexport type TopicPickerSelected = {\n  [topicNumber: string]: Topic\n}\n\nexport const generalRiskTopic = 0;\n\nexport interface PolicyRule {\n  topic: string,\n  riskThreshold: any\n}\n\nexport interface PolicyGuide {\n  name: string,\n  rules: Array<PolicyRule>\n}\n\nexport class Policy {\n  isSafe: boolean;\n  policyGuide: PolicyGuide;\n}\n\nexport interface RiskLevel {\n  name: string,\n  color: string,\n}\n\nexport const RiskLevels : { [key: string]: RiskLevel } = {\n  0 : { name: 'Always Safe', color: '#7ED321' },\n  1 : { name: 'Very Safe', color: '#4de761' },\n  2 : { name: 'Grey', color: '#afb8a1' },\n  3 : { name: 'Questionable', color: '#fbcb40' },\n  4 : { name: 'Unknow', color: '#2d96fe' },\n  5 : { name: 'Mild', color: '#f6715b' },\n  6 : { name: 'Offensive', color: '#f17209' },\n  7 : { name: 'Obscene', color: '#ed1c24' },\n};\n\nexport interface Language {\n  code:string;\n  name:string;\n  partial?:boolean;\n}\n\nexport const Languages : Language[] = [\n  { code: 'ar', name: 'Arabic', partial: false },\n  { code: 'da', name: 'Danish', partial: true },\n  { code: 'de', name: 'German', partial: false },\n  { code: 'en', name: 'English', partial: false },\n  { code: 'es', name: 'Spanish', partial: false },\n  { code: 'fi', name: 'Finnish', partial: false },\n  { code: 'fr', name: 'French', partial: false },\n  { code: 'hi', name: 'Hindi', partial: true },\n  { code: 'id', name: 'Indonesian', partial: false },\n  { code: 'it', name: 'Italian', partial: false },\n  { code: 'ja', name: 'Japanese', partial: false },\n  { code: 'ko', name: 'Korean', partial: false },\n  { code: 'nl', name: 'Dutch', partial: false },\n  { code: 'no', name: 'Norwegian', partial: true },\n  { code: 'pl', name: 'Polish', partial: false },\n  { code: 'pt', name: 'Portuguese', partial: false },\n  { code: 'ro', name: 'Romanian', partial: false },\n  { code: 'ru', name: 'Russian', partial: false },\n  { code: 'sv', name: 'Swedish', partial: true },\n  { code: 'th', name: 'Thai', partial: false },\n  { code: 'tr', name: 'Turkish', partial: false },\n  { code: 'vi', name: 'Vietnamese', partial: false },\n  { code: 'zh', name: 'Chinese', partial: false },\n];\n\nexport interface SelectBoxItem {\n  content:string;\n  value:string | number;\n}\n\nexport const ContentType = [\n  { content: 'Short Text', value: 'SHORT_TEXT' },\n  { content: 'Long Text', value: 'LONG_TEXT' },\n  { content: 'User Name', value: 'USERNAME' },\n];\n\nexport const DiagnoseSearchParams = 'keyword';\n\n// Set the default client\nexport const DefaultClient = 0;\n\n// Set the default language to English\nexport const DefaultLanguage = 'en';\n\n// Set the default ContentType to SHORT_TEXT\nexport const DefaultContentType = 'SHORT_TEXT';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'https://virtserver.swaggerhub.com/twohat/classifyText/2.0.1',\n  sentry: {\n    dsn: 'https://1f168fd1b0fa4b6999f1a901c0804a91@sentry.io/1788710',\n    environment: 'development',\n    ignoreErrors: [\n      'Non-Error exception captured'\n    ]\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}