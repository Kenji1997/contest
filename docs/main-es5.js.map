{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///projects/classify-text-swagger-client/dist/fesm2015/classify-text-swagger-client.js","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main/a11y-flyout/a11y-flyout.component.ts","webpack:///src/app/main/a11y-flyout/a11y-flyout.component.html","webpack:///src/app/main/client-picker/client-picker.component.ts","webpack:///src/app/main/client-picker/client-picker.component.html","webpack:///src/app/main/header/header.component.ts","webpack:///src/app/main/header/header.component.html","webpack:///src/app/main/language-picker/language-picker.component.ts","webpack:///src/app/main/language-picker/language-picker.component.html","webpack:///src/app/main/logo/logo.component.ts","webpack:///src/app/main/logo/logo.component.html","webpack:///src/app/main/main.module.ts","webpack:///src/app/main/search/search.component.ts","webpack:///src/app/main/search/search.component.html","webpack:///src/app/main/topic-picker/topic-picker.component.ts","webpack:///src/app/main/topic-picker/topic-picker.component.html","webpack:///src/app/main/user-flyout/user-flyout.component.html","webpack:///src/app/main/user-flyout/user-flyout.component.ts","webpack:///src/app/shared-components/app-grid/app-grid.component.ts","webpack:///src/app/shared-components/app-grid/app-grid.component.html","webpack:///src/app/shared-components/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/shared-components/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/shared-components/loading-indicator/loading-indicator.component.ts","webpack:///src/app/shared-components/loading-indicator/loading-indicator.component.html","webpack:///src/app/shared-components/more-button/more-button.component.ts","webpack:///src/app/shared-components/more-button/more-button.component.html","webpack:///src/app/shared-components/option-button-group/option-button-group.component.ts","webpack:///src/app/shared-components/option-button-group/option-button-group.component.html","webpack:///src/app/shared-components/progress-bar/progress-bar.component.ts","webpack:///src/app/shared-components/progress-bar/progress-bar.component.html","webpack:///src/app/shared-components/select-box/select-box.component.ts","webpack:///src/app/shared-components/select-box/select-box.component.html","webpack:///src/app/shared-components/sentry.service.ts","webpack:///src/app/shared-components/shared-components.module.ts","webpack:///src/app/shared-components/toogle-slider/toogle-slider.component.ts","webpack:///src/app/shared-components/toogle-slider/toogle-slider.component.html","webpack:///src/app/shared-components/tooltip/tooltip.component.ts","webpack:///src/app/shared-components/tooltip/tooltip.component.html","webpack:///src/app/shared-components/user.service.ts","webpack:///src/app/subnav/admin-button/admin-button.component.ts","webpack:///src/app/subnav/admin-button/admin-button.component.html","webpack:///src/app/subnav/api-button/api-button.component.ts","webpack:///src/app/subnav/api-button/api-button.component.html","webpack:///src/app/subnav/help/help.component.ts","webpack:///src/app/subnav/help/help.component.html","webpack:///src/app/subnav/sub-navigation/sub-navigation.component.ts","webpack:///src/app/subnav/sub-navigation/sub-navigation.component.html","webpack:///src/app/subnav/subnav.module.ts","webpack:///src/constants.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CustomHttpUrlEncodingCodec","k","replace","v","BASE_PATH","COLLECTION_FORMATS","Configuration","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","contentTypes","length","undefined","type","find","x","isJsonMime","accepts","mime","jsonMime","RegExp","test","toLowerCase","DefaultService","httpClient","configuration","defaultHeaders","consumes","form","consume","observe","reportProgress","headers","httpHeaderAccepts","httpHeaderAcceptSelected","selectHeaderAccept","set","request","body","extended","queryParameters","encoder","httpContentTypeSelected","selectHeaderContentType","params","ɵfac","DefaultService_Factory","t","ɵprov","token","factory","decorators","args","APIS","TextInput","ContentTypeEnum","SHORTTEXT","LONGTEXT","USERNAME","ApiModule","parentModule","http","configurationFactory","ngModule","providers","provide","useFactory","ɵmod","ɵinj","ApiModule_Factory","imports","declarations","routes","path","loadChildren","m","GenericViewModule","data","breadcrumb","children","pathMatch","redirectTo","DiagnoseModule","AppRoutingModule","forRoot","AppComponent","title","selector","templateUrl","styleUrls","AppModule","useClass","useValue","apiBaseUrl","bootstrap","A11yFlyoutComponent","ClientPickerComponent","selectedClient","clientChanged","clients","name","selectBoxList","map","client","content","value","selectedValue","emit","onClientChanged","HeaderComponent","userService","defaultLanguage","me","user","newLanguage","console","log","onUserChangedLanguage","LanguagePickerComponent","selectedLanguage","languageChanged","languages","transformSelectedContent","language","currentItem","item","languageCode","onLanguageChanged","LogoComponent","MainModule","ENTER_KEY_CODE","DIAGNOSE_URL","SearchComponent","router","route","keyWord","queryParams","subscribe","hasOwnProperty","$event","keyCode","trim","onSearch","navigate","onKey","defaultTitle","hoverTitle","TopicPickerComponent","topics","selecteds","maximumItemShow","topicSelected","_onSelectChanged","originalOrder","a","b","topicNumber","topic","onMouseEnter","onMouseLeave","UserFlyoutComponent","currentUser","AppGridComponent","_apps","_gridColumns","apps","columns","BreadcrumbsComponent","LoadingIndicatorComponent","MoreButtonComponent","OptionButtonGroupComponent","groupId","label","options","valueChange","Math","random","toString","substring","ProgressBarComponent","percent","setTimeout","round","SelectBoxComponent","listData","selectChanged","currentSelected","sentry","SentryErrorHandler","error","production","eventId","originalError","providedIn","SharedComponentsModule","ToogleSliderComponent","defaultActive","_onChanged","isActive","onClick","TooltipComponent","text","UserService","defaultPrefs","lastClientId","lastContentType","defaultUser","moderatorId","displayName","email","emails","verified","familyName","givenName","photos","provider","config","allowedLanguages","allowedClients","status","prefs","preferences","window","savedPrefs","JSON","stringify","localStorage","setItem","category","message","level","getItem","parse","AdminButtonComponent","ApiButtonComponent","HelpComponent","navList","link","icon","subMenu","SubNavigationComponent","collapseEvent","event","target","checked","toggleCollapse","SubnavModule","Topics","faIcon","generalRiskTopic","Policy","RiskLevels","color","Languages","partial","ContentType","DiagnoseSearchParams","DefaultClient","DefaultLanguage","DefaultContentType","environment","dsn","ignoreErrors","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { InjectionToken, ɵɵinject, ɵɵdefineInjectable, ɵsetClassMetadata, Injectable, Optional, Inject, ɵɵdefineNgModule, ɵɵdefineInjector, NgModule, SkipSelf } from '@angular/core';\nimport { HttpUrlEncodingCodec, HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nclass CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k) {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v) {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\nconst BASE_PATH = new InjectionToken('basePath');\nconst COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n};\n\nclass Configuration {\n    constructor(configurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    selectHeaderContentType(contentTypes) {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    selectHeaderAccept(accepts) {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n\n/**\n * Classify text into risk scores\n * Will take text and classify it via risk\n *\n * OpenAPI spec version: 2.0.1\n * Contact: support@twohat.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */ /* tslint:disable:no-unused-variable member-ordering */\nclass DefaultService {\n    constructor(httpClient, basePath, configuration) {\n        this.httpClient = httpClient;\n        this.basePath = 'https://virtserver.swaggerhub.com/twohat/classifyText/2.0.1';\n        this.defaultHeaders = new HttpHeaders();\n        this.configuration = new Configuration();\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    canConsumeForm(consumes) {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n    classifyLanguage(observe = 'body', reportProgress = false) {\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [\n            'application/json'\n        ];\n        return this.httpClient.request('post', `${this.basePath}/classify/language`, {\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    classifyText(body, extended, observe = 'body', reportProgress = false) {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (extended !== undefined && extended !== null) {\n            queryParameters = queryParameters.set('extended', extended);\n        }\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        return this.httpClient.request('post', `${this.basePath}/classify/text`, {\n            body: body,\n            params: queryParameters,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    classifyTextBulk(body, extended, observe = 'body', reportProgress = false) {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (extended !== undefined && extended !== null) {\n            queryParameters = queryParameters.set('extended', extended);\n        }\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [\n            'application/json'\n        ];\n        const httpContentTypeSelected = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        return this.httpClient.request('post', `${this.basePath}/classify/textBulk`, {\n            body: body,\n            params: queryParameters,\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n    statusGet(observe = 'body', reportProgress = false) {\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        let httpHeaderAccepts = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n        // to determine the Content-Type header\n        const consumes = [];\n        return this.httpClient.request('get', `${this.basePath}/status`, {\n            withCredentials: this.configuration.withCredentials,\n            headers: headers,\n            observe: observe,\n            reportProgress: reportProgress\n        });\n    }\n}\nDefaultService.ɵfac = function DefaultService_Factory(t) { return new (t || DefaultService)(ɵɵinject(HttpClient), ɵɵinject(BASE_PATH, 8), ɵɵinject(Configuration, 8)); };\nDefaultService.ɵprov = ɵɵdefineInjectable({ token: DefaultService, factory: DefaultService.ɵfac });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(DefaultService, [{\n        type: Injectable\n    }], function () { return [{ type: HttpClient }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [BASE_PATH]\n            }] }, { type: Configuration, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\nconst APIS = [DefaultService];\n\nvar TextInput;\n(function (TextInput) {\n    TextInput.ContentTypeEnum = {\n        SHORTTEXT: 'SHORT_TEXT',\n        LONGTEXT: 'LONG_TEXT',\n        USERNAME: 'USERNAME'\n    };\n})(TextInput || (TextInput = {}));\n\nclass ApiModule {\n    constructor(parentModule, http) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n                'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n    static forRoot(configurationFactory) {\n        return {\n            ngModule: ApiModule,\n            providers: [{ provide: Configuration, useFactory: configurationFactory }]\n        };\n    }\n}\nApiModule.ɵmod = ɵɵdefineNgModule({ type: ApiModule });\nApiModule.ɵinj = ɵɵdefineInjector({ factory: function ApiModule_Factory(t) { return new (t || ApiModule)(ɵɵinject(ApiModule, 12), ɵɵinject(HttpClient, 8)); }, providers: [\n        DefaultService\n    ], imports: [[]] });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(ApiModule, [{\n        type: NgModule,\n        args: [{\n                imports: [],\n                declarations: [],\n                exports: [],\n                providers: [\n                    DefaultService\n                ]\n            }]\n    }], function () { return [{ type: ApiModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: HttpClient, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APIS, ApiModule, BASE_PATH, COLLECTION_FORMATS, Configuration, DefaultService, TextInput };\n//# sourceMappingURL=classify-text-swagger-client.js.map\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./modules/generic-view/generic-view.module').then(m => m.GenericViewModule),\n    data: { breadcrumb: '' }\n  },\n  {\n    path: 'filter-quality',\n    data: { breadcrumb: 'Filter Quality' },\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'audit-rules'\n      },\n      {\n        path: 'audit-rules',\n        data: { breadcrumb: 'Audit Rules' },\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'diagnose'\n          },\n          {\n            path: 'diagnose',\n            loadChildren: () => import('./modules/diagnose/diagnose.module').then(m => m.DiagnoseModule),\n            data: { breadcrumb: 'Diagnose' },\n          }\n        ],\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'modtools-app';\n}\n","<app-main-header></app-main-header>\n\n<app-sub-navigation></app-sub-navigation>\n\n<main>\n  <router-outlet></router-outlet>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\nimport { ApiModule as ApiClassifyTextModule, BASE_PATH } from 'classify-text-swagger-client';\nimport { environment } from 'src/environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './main/main.module';\nimport { SubnavModule } from './subnav/subnav.module';\n\nimport { SentryErrorHandler } from 'src/app/shared-components/sentry.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MainModule,\n    SubnavModule,\n    BreadcrumbModule,\n    HttpClientModule,\n    ApiClassifyTextModule,\n  ],\n  providers: [\n    { provide: ErrorHandler, useClass: SentryErrorHandler },\n    { provide: BASE_PATH, useValue: environment.apiBaseUrl },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-a11y-flyout',\n  templateUrl: './a11y-flyout.component.html',\n  styleUrls: [ './a11y-flyout.component.less' ]\n})\nexport class A11yFlyoutComponent {\n\n  constructor () { }\n\n}\n","<!-- TODO: Icon buttons per the design -->\n<button i18n class=\"disabled\">ACCESSIBILITY</button>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SelectBoxItem, DefaultClient } from 'src/constants';\n\ninterface Client {\n  id:number;\n  name:string;\n}\n\n@Component({\n  selector: 'app-client-picker',\n  templateUrl: './client-picker.component.html',\n  styleUrls: [ './client-picker.component.less' ]\n})\nexport class ClientPickerComponent {\n\n  @Input() selectedClient = DefaultClient;\n  @Output() clientChanged = new EventEmitter<number>();\n\n  // TODO: This needs to be externally sourced\n  clients:Client[] = [\n    { id: 60, name: 'Live' },\n    { id: 61, name: 'Sandbox' },\n    { id: 0, name: 'Community Sift' }\n  ]\n\n  selectBoxList: SelectBoxItem[] = this.clients.map(client => ({\n    content: client.name,\n    value: client.id\n  }))\n\n  constructor () { }\n\n  onClientChanged (selectedValue: number) {\n    this.clientChanged.emit(selectedValue);\n  }\n\n}\n","<app-select-box\n    [listData]=\"selectBoxList\"\n    [selectedValue]=\"selectedClient\"\n    (selectChanged)=\"onClientChanged($event)\"\n></app-select-box>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared-components/user.service';\nimport { User } from 'src/app/shared-components/user';\nimport { DefaultLanguage } from 'src/constants';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './header.component.html',\n  styleUrls: [ './header.component.less' ]\n})\nexport class HeaderComponent implements OnInit {\n  defaultLanguage = DefaultLanguage;\n  user:User\n\n  constructor (public userService:UserService) { }\n\n  async ngOnInit () {\n    this.user = await this.userService.me();\n  }\n\n  onUserChangedLanguage (newLanguage:string) {\n    // Todo: Update language of page\n    console.log('[HeaderComponent] onUserChangedLanguage get newLanguage:', newLanguage);\n  }\n\n}\n","<header class=\"main\">\n\n  <app-main-logo></app-main-logo>\n  \n  <app-main-search></app-main-search>\n\n  <app-language-picker [selectedLanguage]=\"defaultLanguage\"\n                   (languageChanged)=\"onUserChangedLanguage($event)\"\n  ></app-language-picker>\n  \n  <app-a11y-flyout></app-a11y-flyout>\n  \n  <app-user-flyout></app-user-flyout>\n\n</header>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { sortBy } from 'lodash';\n\nimport { Language, Languages, SelectBoxItem } from 'src/constants';\n\nenum type {\n  name = 'name',\n  code = 'code'\n}\n\n@Component({\n  selector: 'app-language-picker',\n  templateUrl: './language-picker.component.html',\n  styleUrls: [ './language-picker.component.less' ]\n})\nexport class LanguagePickerComponent implements OnInit {\n  // type of selectedValue: Language name or\n  @Input() type: type = type.name;\n  @Input() selectedLanguage = 'en';\n  @Output() languageChanged = new EventEmitter<string>();\n\n  languages: Language[] = [];\n  selectBoxList: SelectBoxItem[] = [];\n  transformSelectedContent: (value: any) => string = null;\n\n  constructor () { }\n\n  // Todo: Apply some logic to show allowed language by user account\n  // constructor (private userService: UserService) { }\n\n  async ngOnInit () {\n    // Get the current user\n    // const user = await this.userService.me();\n\n    // Filter the user's languages by the ones they're allowed to use\n    // if (user?.config?.allowedLanguages) {\n    //   this.languages = Languages.filter(lang =>\n    //     user.config.allowedLanguages.includes(lang.code)\n    //   );\n    // }\n\n    // Dummy languages for now\n    this.languages = Languages;\n\n    // Sort by language name, not code.\n    this.languages = sortBy(this.languages, 'name');\n\n    // get selectBoxList from languages\n    this.selectBoxList = this.languages.map(language => ({\n      content: language.name,\n      value: language.code\n    }));\n\n    // transform selected content of select box\n    // TODO: add more transform function here\n    if (this.type === type.code) {\n      this.transformSelectedContent = value => {\n        const currentItem: Language = this.languages.find(\n          item => item.code === value\n        );\n        return currentItem?.code;\n      };\n    }\n  }\n\n  /**\n   * Fired when the user changes their language\n   */\n  onLanguageChanged (languageCode: string) {\n    this.languageChanged.emit(languageCode);\n  }\n}\n","<app-select-box\n    [listData]=\"selectBoxList\"\n    [selectedValue]=\"selectedLanguage\"\n    [transformSelectedContent]=\"transformSelectedContent\"\n    (selectChanged)=\"onLanguageChanged($event)\"\n></app-select-box>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: [ './logo.component.less' ]\n})\nexport class LogoComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<!-- TODO: Link to app root -->\n\n<a routerLink=\"/\">\n  <img class=\"logo\" src=\"/assets/community_sift-logo-rgb_official_copy.svg\">\n</a>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { SharedComponentsModule } from '../shared-components/shared-components.module';\n\nimport { LogoComponent } from './logo/logo.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SearchComponent } from './search/search.component';\nimport { LanguagePickerComponent } from './language-picker/language-picker.component';\nimport { A11yFlyoutComponent } from './a11y-flyout/a11y-flyout.component';\nimport { UserFlyoutComponent } from './user-flyout/user-flyout.component';\nimport { ClientPickerComponent } from './client-picker/client-picker.component';\nimport { TopicPickerComponent } from './topic-picker/topic-picker.component';\n\n@NgModule({\n  declarations: [\n    LogoComponent,\n    HeaderComponent,\n    SearchComponent,\n    LanguagePickerComponent,\n    A11yFlyoutComponent,\n    UserFlyoutComponent,\n    ClientPickerComponent,\n    TopicPickerComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    SharedComponentsModule\n  ],\n  exports: [\n    HeaderComponent,\n    LanguagePickerComponent,\n    ClientPickerComponent,\n    TopicPickerComponent,\n  ]\n})\nexport class MainModule { }\n","/* eslint-disable no-unused-vars */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DiagnoseSearchParams } from 'src/constants';\n\nconst ENTER_KEY_CODE = 13;\nconst DIAGNOSE_URL = '/filter-quality/audit-rules/diagnose';\n\n@Component({\n  selector: 'app-main-search',\n  templateUrl: './search.component.html',\n  styleUrls: [ './search.component.less' ]\n})\nexport class SearchComponent implements OnInit {\n  keyWord = '';\n\n  constructor (\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    // initialize keyword value by url\n    this.route.queryParams.subscribe(params => {\n      let keyWord = '';\n      if (params.hasOwnProperty(DiagnoseSearchParams)) {\n        keyWord = params[DiagnoseSearchParams];\n      }\n\n      this.keyWord = keyWord;\n    });\n  }\n\n  ngOnInit () {\n  }\n\n  // binding Enter press to onSearch()\n  onKey ($event) {\n    if ($event.keyCode === ENTER_KEY_CODE && this.keyWord.trim()) {\n      this.onSearch();\n    }\n  }\n\n  onSearch () {\n    this.router.navigate([ DIAGNOSE_URL ], {\n      queryParams: {\n        [DiagnoseSearchParams]: this.keyWord\n      }\n    });\n  }\n}\n","<div class=\"search-wrapper\">\n    <input type=\"search\" placeholder=\"Search for keywords, phrases, etc.\" i18n-placeholder [(ngModel)]=\"keyWord\" (keyup)=\"onKey($event)\">\n    <i class=\"material-icons search-icon\">search</i>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Topic, TopicPickerSelected, Topics } from 'src/constants';\nimport { KeyValue } from '@angular/common';\n\nconst defaultTitle = 'Add more topics';\nconst hoverTitle = 'Choose Topic';\n\n@Component({\n  selector: 'app-topic-picker',\n  templateUrl: './topic-picker.component.html',\n  styleUrls: [ './topic-picker.component.less' ]\n})\nexport class TopicPickerComponent implements OnInit {\n  title: string = defaultTitle;\n  topics: { [key: string]: Topic } = Topics;\n  selecteds: { [key: string]: any } = {};\n\n  @Input() maximumItemShow = 8;\n  @Input() topicSelected: { [key: string]: any } = {};\n  @Output() _onSelectChanged = new EventEmitter<TopicPickerSelected>();\n  constructor () { }\n\n  ngOnInit (): void {\n    // add selected topic on @Input to memo\n    for (const topicNumber in this.topics) {\n      if (this.topicSelected.hasOwnProperty(topicNumber)) {\n        this.selecteds[topicNumber] = this.topics[topicNumber];\n      }\n    }\n  }\n\n  // Handle event mouse enter\n  onMouseEnter () {\n    this.title = hoverTitle;\n  }\n\n  // Handle event mouse leave\n  onMouseLeave () {\n    this.title = defaultTitle;\n  }\n\n  // Handle select & unSelect item\n  onSelect (topicNumber: string, topic: Topic): void {\n    if (this.selecteds.hasOwnProperty(topicNumber)) {\n      delete this.selecteds[topicNumber];\n    } else {\n      this.selecteds[topicNumber] = topic;\n    }\n\n    // Event emit\n    this._onSelectChanged.emit(this.selecteds);\n  }\n\n  // check a topic is selected\n  isSelected (topicNumber: string): boolean {\n    return this.selecteds.hasOwnProperty(topicNumber);\n  }\n\n  originalOrder = (a: KeyValue<string, Topic>, b: KeyValue<string, Topic>): number => {\n    return 0;\n  }\n}\n","<div class=\"select-box\" (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\">\n    <div class=\"select-box__selected\">{{ title }}</div>\n    <i class=\"material-icons select-box__icon\">keyboard_arrow_down</i>\n    <ul class=\"select-box__list\" [style.--data-maximum]=\"maximumItemShow\">\n        <li class=\"select-box__item\"\n            *ngFor=\"let topic of topics | keyvalue: originalOrder\"\n            [ngClass]=\"{'active': isSelected(topic.key)}\"\n            (click)=\"onSelect(topic.key, topic.value)\">\n            {{ topic.value.name }}\n        </li>\n    </ul>\n</div>","<button *ngIf=\"currentUser\" class=\"disabled\">\n  <img src=\"{{ currentUser.photos[0].value }}\"\n       alt=\"Profile picture for {{ currentUser.displayName }}\"\n       *ngIf=\"currentUser.photos && currentUser.photos.length\"\n       aria-hidden=\"true\" />\n  <span>{{ currentUser.name.givenName }}</span>\n</button>\n\n<button *ngIf=\"!currentUser\"><i class=\"mdi mdi-account-off\"></i></button>","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../../shared-components/user';\nimport { UserService } from '../../shared-components/user.service';\n\n@Component({\n  selector: 'app-user-flyout',\n  templateUrl: './user-flyout.component.html',\n  styleUrls: ['./user-flyout.component.less']\n})\nexport class UserFlyoutComponent implements OnInit {\n\n  currentUser:User;\n\n  constructor(private userService:UserService) { }\n\n  async ngOnInit() {\n\n    this.currentUser = await this.userService.me()\n\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { IAppGridItem } from './iapp-grid-item';\n\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './app-grid.component.html',\n  styleUrls: ['./app-grid.component.less']\n})\nexport class AppGridComponent implements OnInit {\n\n  _apps:IAppGridItem[] = []\n  _gridColumns = 4\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  get apps () { return this._apps }\n  @Input() set apps (apps:IAppGridItem[]) {\n    this._apps = apps;\n  }\n\n  get columns () { return this._gridColumns }\n  @Input() set columns (columns:number) {\n    this._gridColumns = columns;\n  }\n\n}\n","<section class=\"app-grid\">\n\n  <ol class=\"apps-list grid-columns-{{_gridColumns}}\">\n    \n    <li *ngFor=\"let app of _apps\">\n      <a routerLink=\"{{app.url}}\">\n        <i class=\"material-icons\">{{app.icon}}</i>\n        {{app.text}}\n      </a>\n    </li>\n\n  </ol>\n\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\n// import { checkServerIdentity } from 'tls';\n\ninterface IBreadcrumb {\n  label: string;\n  params: Params;\n  url: string;\n}\n\n@Component({\n  selector: 'app-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.less']\n})\nexport class BreadcrumbsComponent implements OnInit {\n\n  public breadcrumbs: IBreadcrumb[];\n\n  constructor() {}\n\n  ngOnInit () {\n\n  }\n\n}\n","<div class=\"breadcrumb\">\n  <div class=\"breadcrumb__icon\">\n    <a routerLink=\"/\">\n      <img src=\"/assets/comunity_sift-logo-compact.svg\" alt=\"home\">\n    </a>\n  </div>\n\n  <!-- <xng-breadcrumb separator=\">\"></xng-breadcrumb> -->\n  <xng-breadcrumb [separator]=\"iconTemplate\"></xng-breadcrumb>\n \n  <ng-template #iconTemplate>\n    <i class=\"material-icons\">keyboard_arrow_right</i>\n  </ng-template>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-indicator',\n  templateUrl: './loading-indicator.component.html',\n  styleUrls: [ './loading-indicator.component.less' ]\n})\nexport class LoadingIndicatorComponent implements OnInit {\n\n  @Input() error:boolean;\n  @Input() loading:boolean;\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<!-- <i class=\"mdi mdi-spin mdi-loading mdi-24px\" *ngIf=\"loading\"></i> -->\n<div class=\"loader\" *ngIf=\"loading\">\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        width=\"24px\" height=\"30px\" viewBox=\"0 0 24 30\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n        <rect x=\"0\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n        <animate attributeName=\"height\" attributeType=\"XML\"\n            values=\"5;21;5\" \n            begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"10\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n        <animate attributeName=\"height\" attributeType=\"XML\"\n            values=\"5;21;5\" \n            begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        </rect>\n        <rect x=\"20\" y=\"13\" width=\"4\" height=\"5\" fill=\"#333\">\n        <animate attributeName=\"height\" attributeType=\"XML\"\n            values=\"5;21;5\" \n            begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\"\n            values=\"13; 5; 13\"\n            begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        </rect>\n    </svg>\n</div>\n\n<div class=\"error\" *ngIf=\"error\">\n    <i class=\"mdi mdi-alert-circle-outline mdi-48px\"></i>\n    <p class=\"error-text\">Somethings went wrong !</p>\n</div>\n<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-more-button',\n  templateUrl: './more-button.component.html',\n  styleUrls: [ './more-button.component.less' ]\n})\nexport class MoreButtonComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<button>More</button>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface IOptionButton {\n  label?:string;\n  icon?:string;\n  value:string|number;\n  ariaLabel:string;\n}\n\n@Component({\n  selector: 'app-option-button-group',\n  templateUrl: './option-button-group.component.html',\n  styleUrls: [ './option-button-group.component.less' ]\n})\nexport class OptionButtonGroupComponent implements OnInit {\n\n  groupId = '';\n\n  @Input() label = '';\n  @Input() options:IOptionButton[] = [];\n  @Input() value = '';\n\n  @Output() valueChange:EventEmitter<string> = new EventEmitter<string>();\n\n  constructor () { }\n\n  ngOnInit () {\n    this.groupId = Math.random().toString(36).substring(2);\n  }\n\n  onValueChanged ($event:any) {\n    this.valueChange.emit($event);\n  }\n\n}\n","<span *ngIf=\"label\" [attr.aria-label]=\"label\" id=\"label\">{{label}}</span>\n\n<ul aria-labelledby=\"label\" role=\"radiogroup\">\n\n  <li *ngFor=\"let option of options\"\n       role=\"radio\"\n       tabindex=\"0\"\n       [attr.aria-label]=\"option.ariaLabel\">\n  \n    <label>\n      <input type=\"radio\"\n             [name]=\"groupId\"\n             [(ngModel)]=\"value\"\n             (ngModelChange)=\"onValueChanged($event)\"\n             [value]=\"option.value\">\n      \n      <span class=\"button {{option.icon ? 'icon' : ''}}\">\n        <i *ngIf=\"option.icon\" class=\"mdi mdi-{{option.icon}}\"></i>\n        {{option.label}}\n      </span>\n    </label>\n\n  </li>\n\n</ul>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.less']\n})\nexport class ProgressBarComponent implements OnInit {\n  @Input() label: string;\n  @Input() value: number;\n  percent = '0';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.percent = Math.round(this.value * 100) + '%';\n    }, 400)\n  }\n\n}\n","<div class=\"progress-bar\">\n    <span class=\"label\">{{ label }}</span>\n    <div class=\"line\" [style.--percent]=\"percent\"></div>\n    <span class=\"percent-text\">{{ percent }}</span>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SelectBoxItem } from 'src/constants';\n\n@Component({\n  selector: 'app-select-box',\n  templateUrl: './select-box.component.html',\n  styleUrls: [ './select-box.component.less' ]\n})\nexport class SelectBoxComponent implements OnInit {\n  @Input() listData: SelectBoxItem[] = [];\n  @Input() maximumItemShow = 8;\n  @Input() selectedValue: string | number = null;\n  @Input() transformSelectedContent: (value: any) => string = null;\n  @Output() selectChanged = new EventEmitter<string | number>();\n\n  constructor () { }\n\n  ngOnInit (): void {}\n\n  // return the first item or empty item\n  get firstItem (): SelectBoxItem {\n    return this.listData?.length\n      ? this.listData[0]\n      : { content: '', value: '' };\n  }\n\n  // if listData is null || undefined || empty just return an item with empty content\n  // return the first item if the default selectedValue have not passed\n  get currentSelected (): SelectBoxItem {\n    if (!this.listData?.length) {\n      return { content: '', value: '' };\n    }\n\n    return this.selectedValue === null\n      ? this.listData[0]\n      : this.listData.find(item => item.value === this.selectedValue);\n  }\n\n  get selectedContent () {\n    return this.transformSelectedContent ? this.transformSelectedContent(this.currentSelected.value) : this.currentSelected.content;\n  }\n\n  // emit selectChanged event\n  onSelect (value: string | number) {\n    this.selectedValue = value;\n    this.selectChanged.emit(value);\n  }\n}\n","<div class=\"select-box\">\n    <div class=\"select-box__selected\">{{ selectedContent }}</div>\n    <i class=\"material-icons select-box__icon\">keyboard_arrow_down</i>\n    <ul class=\"select-box__list\" [style.--data-maximum]=\"maximumItemShow\">\n        <li class=\"select-box__item\"\n            *ngFor=\"let item of listData\"\n            [ngClass]=\"{active: item.value === selectedValue}\"\n            (click)=\"onSelect(item.value)\">\n            {{ item.content }}\n        </li>\n    </ul>\n</div>","import { Injectable, ErrorHandler } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport * as Sentry from '@sentry/browser';\n\nSentry.init(environment.sentry);\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SentryErrorHandler implements ErrorHandler {\n\n  constructor() {}\n\n  handleError(error:any) : void {\n    if (environment.production === true) {\n      const eventId = Sentry.captureException(error.originalError || error);\n      Sentry.showReportDialog({ eventId });\n    }\n    throw error;\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\n\nimport { AppGridComponent } from './app-grid/app-grid.component';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { LoadingIndicatorComponent } from './loading-indicator/loading-indicator.component';\nimport { MoreButtonComponent } from './more-button/more-button.component';\nimport { OptionButtonGroupComponent } from './option-button-group/option-button-group.component';\nimport { SelectBoxComponent } from './select-box/select-box.component';\nimport { ToogleSliderComponent } from './toogle-slider/toogle-slider.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { TooltipComponent } from './tooltip/tooltip.component';\n\n\n@NgModule({\n  declarations: [\n    AppGridComponent,\n    BreadcrumbsComponent,\n    LoadingIndicatorComponent,\n    MoreButtonComponent,\n    OptionButtonGroupComponent,\n    SelectBoxComponent,\n    ToogleSliderComponent,\n    ProgressBarComponent,\n    TooltipComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    BreadcrumbModule,\n  ],\n  exports: [\n    AppGridComponent,\n    BreadcrumbsComponent,\n    LoadingIndicatorComponent,\n    MoreButtonComponent,\n    OptionButtonGroupComponent,\n    SelectBoxComponent,\n    ToogleSliderComponent,\n    ProgressBarComponent,\n    TooltipComponent,\n  ]\n})\nexport class SharedComponentsModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-toogle-slider',\n  templateUrl: './toogle-slider.component.html',\n  styleUrls: [ './toogle-slider.component.less' ]\n})\nexport class ToogleSliderComponent implements OnInit {\n  @Input() defaultActive = false;\n  @Output() _onChanged = new EventEmitter<boolean>();\n\n  public isActive: boolean;\n\n  constructor () {\n    this.isActive = this.defaultActive;\n  }\n\n  ngOnInit (): void {}\n\n  onClick () {\n    this.isActive = !this.isActive;\n    this._onChanged.emit(this.isActive);\n  }\n}\n","<div class=\"toggle-slider\" (click)=\"onClick()\" [ngClass]=\"{active: isActive}\"></div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.less']\n})\nexport class TooltipComponent implements OnInit {\n  @Input() text = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tooltip\" [attr.data-label]=\"text\">\n    <ng-content></ng-content>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as Sentry from '@sentry/browser';\n\nimport { User, UserPreferences } from './user';\nimport { DefaultLanguage, DefaultClient, DefaultContentType } from 'src/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  defaultPrefs:UserPreferences = {\n    language: DefaultLanguage,\n    lastClientId: DefaultClient,\n    lastContentType: DefaultContentType,\n  };\n\n  defaultUser:User = {\n    moderatorId: 'user@example.com',\n    displayName: 'DEFAULT USER',\n    email: 'user@example.com',\n    emails: [ { value: 'user@example.com', verified: false } ],\n    id: 'user@example.com',\n    name: { familyName: 'User', givenName: 'Default' },\n    photos: [],\n    provider: 'NONE',\n    config: {\n      allowedLanguages: ['en'],\n      allowedClients: [60]\n    }\n  }\n  prefs:UserPreferences;\n  user:User;\n\n  constructor(private http:HttpClient) {}\n\n  async me () : Promise<User> {\n\n    // If we already have a user, don't get it again\n    if (this.user) return this.user;\n\n    try {\n\n      this.user = this.defaultUser;\n\n      // this.user = await this.http.get<User>('/me').toPromise();\n\n      // // Set the user in Sentry\n      // Sentry.setUser({\n      //   email: this.user?.email,\n      //   name: this.user?.displayName\n      // });\n\n    } catch (error) {\n\n      // If we failed to get a user, return a default one.\n      if (error.status === 404) this.user = this.defaultUser;\n\n      // Unset the Sentry user\n      Sentry.setUser(null);\n\n    }\n\n    return this.user;\n\n  }\n\n  get preferences () : UserPreferences {\n\n    // Use in-memory prefs first\n    if (this.prefs) return this.prefs;\n\n    // Try getting prefs from LocalStorage\n    if ('localStorage' in window) {\n      const savedPrefs:string = window.localStorage.getItem('prefs');\n      if (savedPrefs) {\n        try {\n\n          this.prefs = JSON.parse(savedPrefs);\n          return this.prefs;\n\n        } catch (error) {\n          Sentry.addBreadcrumb({ category: 'user', message: 'Tried loading user prefs from LocalStorage', level: Sentry.Severity.Error });\n          Sentry.captureException(error);\n          console.error(error);\n        }\n      }\n    }\n\n    // Fail back to default prefs\n    return this.defaultPrefs;\n\n  }\n\n  updatePreferences (value:UserPreferences) {\n\n    // Merge prefs\n    this.prefs = { ...this.preferences, ...value };\n\n    // Serialize and save to LocalStorage\n    if ('localStorage' in window) {\n\n      try {\n\n        // Serialize and save the prefs to LocalStorage\n        // TODO: #scooter - Persist these with the user's prefs on the server\n        const savedPrefs = JSON.stringify(this.prefs);\n        window.localStorage.setItem('prefs', savedPrefs);\n\n      } catch (error) {\n        Sentry.addBreadcrumb({ category: 'user', message: 'Tried saving user prefs to LocalStorage', level: Sentry.Severity.Error });\n        Sentry.captureException(error);\n        console.error(error);\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-button',\n  templateUrl: './admin-button.component.html',\n  styleUrls: [ './admin-button.component.less' ]\n})\nexport class AdminButtonComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<a class=\"disabled\">Admin</a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-api-button',\n  templateUrl: './api-button.component.html',\n  styleUrls: [ './api-button.component.less' ]\n})\nexport class ApiButtonComponent implements OnInit {\n\n  constructor () { }\n\n  ngOnInit () {\n  }\n\n}\n","<a class=\"disabled\">API</a>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subnav-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.less']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<a class=\"disabled\">Help</a>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { has } from 'lodash';\n\nconst navList = [\n  {\n    text: 'Home',\n    link: '/',\n    icon: 'view-dashboard-outline',\n  },\n  {\n    text: 'Policy Guides',\n    link: '#',\n    icon: 'book-multiple',\n  },\n  {\n    text: 'Filter Quality',\n    link: '/filter-quality',\n    icon: 'filter-outline',\n    subMenu: [\n      {\n        text: 'Audit Rules',\n        link: '/audit-rules',\n      },\n    ]\n  },\n  {\n    text: 'User Reputation',\n    link: '#',\n    icon: 'account-check-outline',\n  },\n  {\n    text: 'Reported Content',\n    link: '#',\n    icon: 'table-of-contents',\n  },\n  {\n    text: 'Transparency Reports',\n    link: '#',\n    icon: 'chart-bar',\n  },\n];\n\n@Component({\n  selector: 'app-sub-navigation',\n  templateUrl: './sub-navigation.component.html',\n  styleUrls: [ './sub-navigation.component.less' ]\n})\nexport class SubNavigationComponent implements OnInit {\n  navList = navList;\n  constructor () { }\n\n  @Output() collapseEvent = new EventEmitter<boolean>();\n\n  ngOnInit () {}\n\n  toggleCollapse (event) {\n    if (has(event, 'target.checked')) {\n      this.collapseEvent.emit(event.target.checked);\n    }\n  }\n\n}\n","<nav class='subnav'>\n\n  <label class=\"collapse-toggle disabled\">\n    <input type=\"checkbox\" (click)=\"toggleCollapse($event)\" (change)=\"0\">\n  </label>\n  \n  <ul class=\"top-level-nav\">\n    <li *ngFor=\"let item of navList\">\n      <a [routerLink]=\"item.link\">\n        <i *ngIf=\"item.icon\" class=\"nav-icon mdi\" [class]=\"'mdi-' + item.icon\"></i>\n        <ng-container i18n>{{ item.text }}</ng-container>\n        <i *ngIf=\"item.subMenu\" class=\"material-icons\">expand_more</i>\n      </a>\n    </li>\n  </ul>\n  \n  <app-subnav-help></app-subnav-help>\n  \n  <app-api-button></app-api-button>\n  \n  <app-admin-button></app-admin-button>\n\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HelpComponent } from './help/help.component';\nimport { SubNavigationComponent } from './sub-navigation/sub-navigation.component';\nimport { ApiButtonComponent } from './api-button/api-button.component';\nimport { AdminButtonComponent } from './admin-button/admin-button.component';\n\n@NgModule({\n  declarations: [\n    HelpComponent,\n    SubNavigationComponent,\n    ApiButtonComponent,\n    AdminButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    SubNavigationComponent\n  ]\n})\nexport class SubnavModule { }\n","// Note: I don't know what kind of icon font we need to use\n// So I will add font awesome class here\n// Todo: refactor the icon\nexport interface Topic {\n  name: string,\n  icon: string,\n  faIcon: string,\n}\n\nexport const Topics : { [key: string]: Topic } = {\n  0 : { name: 'General Risk', icon: 'numeric-${risk}-box', faIcon: 'fa-comments' },\n  1 : { name: 'Bullying', icon: 'account-group', faIcon: 'fa-comments' },\n  2 : { name: 'Fighting', icon: 'kabaddi', faIcon: 'fa-comments' },\n  3 : { name: 'Personal Information', icon: 'account-search', faIcon: 'fa-comments' },\n  4 : { name: 'Dating and Sexting', icon: 'heart', faIcon: 'fa-heart' },\n  5 : { name: 'Vulgar', icon: 'chat-alert', faIcon: 'fa-angry' },\n  6 : { name: 'Drugs and Alcohol', icon: 'cannabis', faIcon: 'fa-comments' },\n  7 : { name: 'In-Game Items', icon: 'cube-outline', faIcon: 'fa-comments' },\n  8 : { name: 'Alarm', icon: 'alert-decagram', faIcon: 'fa-comments' },\n  9 : { name: 'Fraud', icon: 'cash', faIcon: 'fa-comments' },\n  10 : { name: 'Racist', icon: 'whistle', faIcon: 'fa-comments' },\n  11 : { name: 'Religion', icon: 'church', faIcon: 'fa-comments' },\n  13 : { name: 'Website', icon: 'link', faIcon: 'fa-comments' },\n  14 : { name: 'Grooming', icon: 'account-child', faIcon: 'fa-comments' },\n  15 : { name: 'Public Threats', icon: 'target-account', faIcon: 'fa-comments' },\n  16 : { name: 'Real Name', icon: 'account-badge-horizontal', faIcon: 'fa-comments' },\n  17 : { name: 'Radicalization', icon: 'bullhorn', faIcon: 'fa-comments' },\n  18 : { name: 'Subversive', icon: 'guy-fawkes-mask', faIcon: 'fa-comments' },\n  19 : { name: 'Sentiment', icon: 'emoticon', faIcon: 'fa-comments' },\n  20 : { name: 'Politics', icon: 'gavel', faIcon: 'fa-comments' },\n  27 : { name: 'Custom1', icon: 'number-1-circle-outline', faIcon: 'fa-comments' },\n  28 : { name: 'Custom2', icon: 'number-2-circle-outline', faIcon: 'fa-comments' },\n  29 : { name: 'Custom3', icon: 'number-3-circle-outline', faIcon: 'fa-comments' },\n  30 : { name: 'Custom4', icon: 'number-4-circle-outline', faIcon: 'fa-comments' },\n  31 : { name: 'Custom5', icon: 'number-5-circle-outline', faIcon: 'fa-comments' },\n};\n\nexport type TopicPickerSelected = {\n  [topicNumber: string]: Topic\n}\n\nexport const generalRiskTopic = 0;\n\nexport interface PolicyRule {\n  topic: string,\n  riskThreshold: any\n}\n\nexport interface PolicyGuide {\n  name: string,\n  rules: Array<PolicyRule>\n}\n\nexport class Policy {\n  isSafe: boolean;\n  policyGuide: PolicyGuide;\n}\n\nexport interface RiskLevel {\n  name: string,\n  color: string,\n}\n\nexport const RiskLevels : { [key: string]: RiskLevel } = {\n  0 : { name: 'Always Safe', color: '#7ED321' },\n  1 : { name: 'Very Safe', color: '#4de761' },\n  2 : { name: 'Grey', color: '#afb8a1' },\n  3 : { name: 'Questionable', color: '#fbcb40' },\n  4 : { name: 'Unknow', color: '#2d96fe' },\n  5 : { name: 'Mild', color: '#f6715b' },\n  6 : { name: 'Offensive', color: '#f17209' },\n  7 : { name: 'Obscene', color: '#ed1c24' },\n};\n\nexport interface Language {\n  code:string;\n  name:string;\n  partial?:boolean;\n}\n\nexport const Languages : Language[] = [\n  { code: 'ar', name: 'Arabic', partial: false },\n  { code: 'da', name: 'Danish', partial: true },\n  { code: 'de', name: 'German', partial: false },\n  { code: 'en', name: 'English', partial: false },\n  { code: 'es', name: 'Spanish', partial: false },\n  { code: 'fi', name: 'Finnish', partial: false },\n  { code: 'fr', name: 'French', partial: false },\n  { code: 'hi', name: 'Hindi', partial: true },\n  { code: 'id', name: 'Indonesian', partial: false },\n  { code: 'it', name: 'Italian', partial: false },\n  { code: 'ja', name: 'Japanese', partial: false },\n  { code: 'ko', name: 'Korean', partial: false },\n  { code: 'nl', name: 'Dutch', partial: false },\n  { code: 'no', name: 'Norwegian', partial: true },\n  { code: 'pl', name: 'Polish', partial: false },\n  { code: 'pt', name: 'Portuguese', partial: false },\n  { code: 'ro', name: 'Romanian', partial: false },\n  { code: 'ru', name: 'Russian', partial: false },\n  { code: 'sv', name: 'Swedish', partial: true },\n  { code: 'th', name: 'Thai', partial: false },\n  { code: 'tr', name: 'Turkish', partial: false },\n  { code: 'vi', name: 'Vietnamese', partial: false },\n  { code: 'zh', name: 'Chinese', partial: false },\n];\n\nexport interface SelectBoxItem {\n  content:string;\n  value:string | number;\n}\n\nexport const ContentType = [\n  { content: 'Short Text', value: 'SHORT_TEXT' },\n  { content: 'Long Text', value: 'LONG_TEXT' },\n  { content: 'User Name', value: 'USERNAME' },\n];\n\nexport const DiagnoseSearchParams = 'keyword';\n\n// Set the default client\nexport const DefaultClient = 0;\n\n// Set the default language to English\nexport const DefaultLanguage = 'en';\n\n// Set the default ContentType to SHORT_TEXT\nexport const DefaultContentType = 'SHORT_TEXT';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'https://virtserver.swaggerhub.com/twohat/classifyText/2.0.1',\n  sentry: {\n    dsn: 'https://1f168fd1b0fa4b6999f1a901c0804a91@sentry.io/1788710',\n    environment: 'development',\n    ignoreErrors: [\n      'Non-Error exception captured'\n    ]\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}