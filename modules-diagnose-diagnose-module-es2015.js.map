{"version":3,"sources":["./src/app/modules/diagnose/diagnose-routing.module.ts","./src/app/modules/diagnose/diagnose-text/diagnose-text.component.ts","./src/app/modules/diagnose/diagnose-text/diagnose-text.component.html","./src/app/modules/diagnose/diagnose.component.ts","./src/app/modules/diagnose/diagnose.component.html","./src/app/modules/diagnose/diagnose.module.ts","./src/app/modules/diagnose/policy-guide/policy-guide.component.ts","./src/app/modules/diagnose/policy-guide/policy-guide.component.html","./src/app/modules/diagnose/regression-test-box/regression-test-box.component.ts","./src/app/modules/diagnose/regression-test-box/regression-test-box.component.html","./src/app/modules/diagnose/topic/topic.component.ts","./src/app/modules/diagnose/topic/topic.component.html","./src/app/pipes/index.ts","./src/app/pipes/right-underscore/right-underscore.pipe.ts","./src/app/pipes/risk-level-to-color/risk-level-to-color.pipe.ts","./src/app/services/diagnose/diagnose.service.ts","./src/app/services/policy/policy.service.ts"],"names":[],"mappings":"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","file":"modules-diagnose-diagnose-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DiagnoseComponent } from './diagnose.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiagnoseComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DiagnoseRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Slots, Rule } from 'classify-text-swagger-client';\nimport { generalRiskTopic } from 'src/constants';\n\ninterface Word {\n  original: string,\n  text: string,\n  level: any,\n  tokens: Array<Rule>,\n}\n\n@Component({\n  selector: 'app-diagnose-text',\n  templateUrl: './diagnose-text.component.html',\n  styleUrls: ['./diagnose-text.component.less']\n})\nexport class DiagnoseTextComponent implements OnInit {\n  @Input() extended: Array<Slots>\n  wordDiagnosed: Array<Word>\n  generalRiskTopic: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.wordDiagnosed = this.handleGroupWord(this.extended);\n    this.generalRiskTopic = generalRiskTopic;\n  }\n\n  /* Note:\n   * + The rule we're using to group 2 or many word is the [text]\n   *   property will be empty when it was used on the prev token\n   * + We need to group [original] & tokens\n   */\n   handleGroupWord(extended: Array<Slots>): Array<Word> {\n    const dataGrouped = extended.reduce((memo, slot, index) => {\n      const { text, original, tokens } = slot;\n      if(text === '') {\n        let previousWord = memo[index-1];\n        let { original: prevOriginal, tokens: prevTokens } = previousWord;\n\n        // append the current original text to the previous one\n        prevOriginal = `${prevOriginal} ${original}`\n\n        // merge tokens\n        prevTokens = this.mergeTokens(prevTokens, tokens);\n\n        previousWord = Object.assign(previousWord, {\n          original: prevOriginal,\n          tokens: prevTokens\n        })\n      } else {\n        const word = this.wordFromSlot(slot);\n        memo.push(word)\n      }\n\n      return memo;\n    }, [])\n\n    return dataGrouped;\n  }\n\n  /*\n   * Handle [slot] data to set some properties like color, topics...\n   * Note: The color we're using get by trisk level of general-riskhe\n   */\n  wordFromSlot (slot: Slots): Word {\n    const { text, solution, original, tokens } = slot;\n    const chosenToken = tokens.find(token => token.text === solution);\n    const level = chosenToken.topics[generalRiskTopic];\n\n    // Note: Reverse array to show the grouping at the top. Need to confirm\n    const tokensReverse = tokens.reverse();\n    const filterToken = this.mergeTokens(tokensReverse);\n\n    return { text, original, level, tokens: filterToken };\n  }\n\n  /*\n   * Merge tokens which have dulpicate [text] property\n   */\n  mergeTokens (...tokens : Array<Array<Rule>>): Array<Rule> {\n    const tokenFlated = tokens.flat();\n    const mapTextToken = tokenFlated.reduce((memo, slot) => {\n      if ( !memo.hasOwnProperty(slot.text) ) {\n        memo[slot.text] = slot;\n      }\n\n      return memo;\n    }, {})\n\n    return Object.values(mapTextToken);\n  }\n}\n","<div class=\"diagnose-text\">\n    <div class=\"text-box\" *ngFor=\"let word of wordDiagnosed\">\n        <div class=\"text__item original\">{{ word.original }}</div>\n        <div class=\"text__item solution\" [style.--bg-color]=\"word.level | riskLevelToColor\">\n            <span>{{ word.text }}</span>\n\n            <div class=\"table detail-box\">\n                <div class=\"tr\" *ngFor=\"let rule of word.tokens\">\n                    <div class=\"td\">\n                        <span class=\"risk-level\"\n                            [style.--rule-risk-level]=\"rule.topics[generalRiskTopic] | riskLevelToColor\"\n                        >{{ rule.topics[generalRiskTopic] }}</span>\n                    </div>\n                    <div class=\"td\">\n                        <span class=\"name\">{{ rule.text }}</span>\n                    </div>\n                    <div class=\"td\">\n                        <span class=\"language\">{{ rule.language }}</span>\n                    </div>\n                    <div class=\"td\">\n                        <div class=\"topics\">\n                            <app-topic\n                                *ngFor=\"let topic of rule.topics | keyvalue\"\n                                [topic]=\"topic.key\"\n                                [level]=\"topic.value\"\n                                type=\"compact\"\n                            ></app-topic>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/* eslint-disable import/extensions */\n/* eslint-disable no-unused-vars */\n/* eslint-disable sort-imports */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/shared-components/user.service';\nimport { User } from 'src/app/shared-components/user';\nimport { DiagnoseService } from 'src/app/services/diagnose/diagnose.service';\nimport { PolicyService } from 'src/app/services/policy/policy.service';\nimport { ContentType, DefaultClient, DefaultContentType, DefaultLanguage, DiagnoseSearchParams, Policy, PolicyGuide, PolicyRule } from 'src/constants';\nimport { FailingFragment, Slots, TextInput } from 'classify-text-swagger-client';\nimport { Subscription } from 'rxjs';\n\ninterface Mistake extends FailingFragment {\n  original: string,\n  failTopic: { [key: string]: any },\n}\n\n@Component({\n  selector: 'app-diagnose',\n  templateUrl: './diagnose.component.html',\n  styleUrls: [ './diagnose.component.less' ]\n})\nexport class DiagnoseComponent implements OnInit, OnDestroy {\n  user: User;\n  isDeep = false;\n  isLoading = true;\n  isShowRegressionBox = false;\n  isError = false;\n\n  keyWord = '';\n  predictions: { [lang: string]: any } = {};\n  topics: { [topic: string]: any } = {};\n  policyGuides: Array<PolicyGuide> = [];\n  policies: Array<Policy> = [];\n  failingFragments: Array<Mistake> = [];\n  extended: Array<Slots> = [];\n\n  // Content type variables\n  selectedContentType = DefaultContentType;\n  contentTypeList = ContentType\n\n  isDefaultActiveDeeperAnalysis = false;\n\n  searchSubscription: Subscription = new Subscription();\n  searchInput: TextInput = {\n    text: '',\n    clientId: DefaultClient,\n    language: DefaultLanguage,\n    contentType: DefaultContentType,\n  };\n\n  constructor (\n    public userService: UserService,\n    public policyService: PolicyService,\n    private diagnoseService: DiagnoseService,\n    private route: ActivatedRoute\n  ) { }\n\n  async ngOnInit (): Promise<void> {\n    // get user data\n    this.user = await this.userService.me();\n\n    // get policy data\n    this.policyGuides = this.policyService.getPolicyGuides();\n\n    // get keyWord from url & call search\n    this.searchSubscription.add(this.route.queryParams.subscribe(params => {\n      if (params.hasOwnProperty(DiagnoseSearchParams)) {\n        // update search input to memo\n        const { lastClientId, lastContentType, language } = this.userService.preferences;\n        this.searchInput = {\n          text: params[DiagnoseSearchParams],\n          clientId: lastClientId,\n          contentType: lastContentType,\n          language,\n        };\n\n        this.onSearch();\n      } else {\n        this.isLoading = false;\n        this.isError = true;\n      }\n    }));\n  }\n\n  ngOnDestroy (): void {\n    this.searchSubscription.unsubscribe();\n  }\n\n  async onSearch () {\n    try {\n      // handle loading-indicator\n      this.isError = false;\n      this.isLoading = true;\n\n      // get data from Backend API\n      const searchResult = await this.diagnoseService.search(this.searchInput);\n\n      // Show original text on the sidebar\n      this.keyWord = searchResult.text;\n\n      // Prediction data for AI prediction component\n      this.predictions = searchResult.predictions;\n\n      // Extended data for diagnose-text component\n      this.extended = searchResult.extended;\n\n      // set topic data for topic component\n      const topics: { [topic: string]: any } = searchResult.topics;\n      this.topics = this.handleTopics(topics, this.policyGuides);\n\n      // set policies data for policy component\n      const { policyModels } = this.handlePolicies(topics, this.policyGuides);\n      this.policies = policyModels;\n\n      this.hideLoading();\n\n      // FailingFragments data for the spelling mistakes component\n      const failingFragments = searchResult.failingFragments;\n      this.failingFragments = this.handleFailingFragments(failingFragments, this.policyGuides, this.keyWord);\n    } catch (e) {\n      console.error('[Diagnose Component] onSearch get error: ', e);\n      this.isLoading = false;\n      this.isError = true;\n    }\n  }\n\n  /*\n   * get all topic relative with policy guide\n   */\n  handleTopics (topics: { [topic: string]: any }, policyGuides: Array<PolicyGuide>) {\n    // combine all rules of policies to an array\n    const combineRule: Array<PolicyRule> = policyGuides.map(policyGuide => policyGuide.rules).flat();\n    const ruleTopics = combineRule.map(rule => rule.topic);\n\n    for (const topic in topics) {\n      if (!ruleTopics.includes(topic)) {\n        delete topics[topic];\n      }\n    }\n    return topics;\n  }\n\n  /*\n   * Note: This function have 2 usecases for now:\n   *  + handle & add isSafe property for policy\n   *  + get all fail topic\n   */\n  handlePolicies (topics: { [topic: string]: any }, policyGuides: Array<PolicyGuide>) {\n    const failTopic = {};\n\n    // get array policies\n    const policyModels = policyGuides.map(policyGuide => {\n      let isSafe = true;\n      // check a policy is safe\n      for (const rule of policyGuide.rules) {\n        const { topic } = rule;\n        if (topics.hasOwnProperty(topic)) {\n          const riskLevel = topics[topic];\n          const riskThreshold = rule.riskThreshold;\n\n          if (riskLevel >= riskThreshold) {\n            failTopic[topic] = riskLevel;\n            isSafe = false;\n            // Don't break here, we still need to get all fail topics\n          }\n        }\n      }\n\n      return ({ isSafe, policyGuide });\n    });\n\n    return { policyModels, failTopic };\n  }\n\n  handleFailingFragments (failingFragments: Array<FailingFragment>, policyGuides: Array<PolicyGuide>, searchText: string) {\n    return failingFragments.map(fragment => {\n      const { topics, startPos, endPos } = fragment;\n      const { failTopic } = this.handlePolicies(topics, policyGuides);\n      const original = searchText.slice(startPos, endPos);\n      return { ...fragment, ...{ failTopic, original } };\n    });\n  }\n\n  hideLoading () {\n    setTimeout(() => { this.isLoading = false; }, 300);\n  }\n\n  onRefresh () {\n    this.onSearch();\n  }\n\n  onLanguageChanged (language: string) {\n    this.searchInput.language = language;\n    this.userService.updatePreferences({ language });\n  }\n\n  onContentTypeChanged (contentType: any) {\n    this.searchInput.contentType = contentType;\n    this.userService.updatePreferences({ lastContentType: contentType });\n  }\n\n  onUserChangedClient (newClient: number) {\n    this.searchInput.clientId = newClient;\n    this.userService.updatePreferences({ lastClientId: newClient });\n  }\n\n  onDeeperAnalysisChanged (value: boolean) {\n    this.isDeep = value;\n  }\n\n  onShowRegressionBox () {\n    this.isShowRegressionBox = true;\n  }\n\n  onCloseRegressionBox () {\n    this.isShowRegressionBox = false;\n  }\n\n  onCopy () {\n    const currentUrl = window.location.href;\n    const el = document.createElement('textarea');\n    el.value = currentUrl;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  }\n}\n","<section id=\"diagnose\">\n    <div class=\"header\">\n        <div class=\"left-content\">\n            <h3 class=\"title\">Diagnose</h3>\n\n            <div class=\"header-breadcrumb\">\n                <app-breadcrumbs></app-breadcrumbs>\n                <div class=\"copy-button\" (click)=\"onCopy()\">\n                    <app-tooltip text=\"Copy URL to Clipboard\">\n                        <img src=\"/assets/icons/copy.svg\" alt=\"copy\">\n                    </app-tooltip>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"right-content\">\n            <div class=\"refresh-button\" (click)=\"onRefresh()\">\n                <app-tooltip text=\"Refresh\">\n                    <i class=\"material-icons\">autorenew</i>\n                </app-tooltip>\n            </div>\n\n            <app-language-picker\n                class=\"language--code\"\n                type=\"code\"\n                [selectedLanguage]=\"this.userService.preferences.language\"\n                (languageChanged)=\"onLanguageChanged($event)\"\n            ></app-language-picker>\n\n            <app-select-box\n                [listData]=\"contentTypeList\"\n                [selectedValue]=\"this.userService.preferences.lastContentType\"\n                (selectChanged)=\"onContentTypeChanged($event)\"\n            ></app-select-box>\n\n\n            <app-client-picker\n                [selectedClient]=\"this.userService.preferences.lastClientId\"\n                (clientChanged)=\"onUserChangedClient($event)\"\n            ></app-client-picker>\n\n            <div class=\"deeper-analysis-box\">\n                <app-toogle-slider\n                    [defaultActive]=\"isDefaultActiveDeeperAnalysis\"\n                    (_onChanged)=\"onDeeperAnalysisChanged($event)\"\n                ></app-toogle-slider>\n\n                <span>Deeper Analysis</span>\n            </div>\n        </div>\n    </div>\n\n    <app-loading-indicator [loading]=\"isLoading\" [error]=\"isError\">\n        <div *ngIf=\"!isLoading && !isError\" class=\"diagnose-main-content\">\n            <div class=\"diagnose-text\">\n                <app-diagnose-text [extended]=\"extended\"></app-diagnose-text>\n\n                <div class=\"deeper-box\" [ngClass]=\"{show: isDeep}\">\n                    <h4 class=\"deeper__title\">Spelling Mistakes</h4>\n                    <div class=\"spelling-mistake\">\n                        <p class=\"spelling-mistake__text\" *ngFor=\"let mistake of failingFragments\">{{ mistake.original }}</p>\n                    </div>\n\n                    <h4 class=\"deeper__title\">What caused which tag</h4>\n                    <div class=\"fail-topic\">\n                        <div class=\"fail-topic__item\" *ngFor=\"let mistake of failingFragments\">\n                            <app-topic\n                                *ngFor=\"let topic of mistake.failTopic | keyvalue\"\n                                [topic]=\"topic.key\"\n                                [level]=\"topic.value\"\n                            ></app-topic>\n                            <span class=\"fail-topic__text\">{{ mistake.text }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"diagnose-side\">\n                <div class=\"side-item keyword\">{{ keyWord }}</div>\n                <div class=\"side-item topic-policy\">\n                    <div class=\"topic-box\">\n                        <h5 class=\"side-item-title\">Topics</h5>\n                        <app-topic\n                            *ngFor=\"let topic of topics | keyvalue\"\n                            [topic]=\"topic.key\"\n                            [level]=\"topic.value\"\n                        ></app-topic>\n                    </div>\n                    \n                    <div class=\"policy-box\">\n                        <h5 class=\"side-item-title\">Policy Guides</h5>\n                        <app-policy-guide \n                            *ngFor=\"let policy of policies\"\n                            [policy]=\"policy\"\n                        ></app-policy-guide>\n                    </div>\n                </div>\n\n                <div class=\"side-item ai-prediction\">\n                    <h5 class=\"side-item-title\">AI Prediction</h5>\n                    <app-progress-bar\n                        *ngFor=\"let predic of predictions | keyvalue\"\n                        [label]=\"predic.key | rightUnderscore\"\n                        [value]=\"predic.value\"\n                    ></app-progress-bar>\n                </div>\n\n                <div class=\"button-group\">\n                    <button class=\"item button--grey\" (click)=\"onShowRegressionBox()\">Escalate</button>\n                    <button class=\"item button--fountain-blue\">Gerkin Test</button>\n                    <button class=\"item button--light-green\">Create Rule</button>\n                </div>\n            </div>\n\n            <app-regression-test-box (_close)=\"onCloseRegressionBox()\" [isShow]=\"isShowRegressionBox\" [topics]=\"topics\"></app-regression-test-box>\n        </div>\n    </app-loading-indicator>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\n\nimport { DiagnoseComponent } from './diagnose.component';\nimport { DiagnoseRoutingModule } from './diagnose-routing.module';\nimport { SharedComponentsModule } from 'src/app/shared-components/shared-components.module';\nimport { MainModule } from 'src/app/main/main.module';\nimport { TopicComponent } from './topic/topic.component';\nimport { PolicyGuideComponent } from './policy-guide/policy-guide.component';\nimport { RightUnderscorePipe, RiskLevelToColorPipe } from 'src/app/pipes';\nimport { DiagnoseTextComponent } from './diagnose-text/diagnose-text.component';\nimport { RegressionTestBoxComponent } from './regression-test-box/regression-test-box.component'\n\n@NgModule({\n  declarations: [\n    DiagnoseComponent,\n    TopicComponent,\n    PolicyGuideComponent,\n    RightUnderscorePipe,\n    RiskLevelToColorPipe,\n    DiagnoseTextComponent,\n    RegressionTestBoxComponent,\n  ],\n  imports: [\n    CommonModule,\n    BreadcrumbModule,\n    DiagnoseRoutingModule,\n    SharedComponentsModule,\n    MainModule,\n  ]\n})\nexport class DiagnoseModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Policy } from 'src/constants';\n\nconst SAFE_POLICY = {\n  icon: 'fas fa-thumbs-up',\n  color: '#7ED321',\n}\n\nconst UN_SAFE_POLICY = {\n  icon: 'fas fa-thumbs-down',\n  color: '#ED0423',\n}\n\n@Component({\n  selector: 'app-policy-guide',\n  templateUrl: './policy-guide.component.html',\n  styleUrls: ['./policy-guide.component.less']\n})\nexport class PolicyGuideComponent implements OnInit {\n  @Input() policy: Policy;\n  name: string;\n  icon: string;\n  color: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const { isSafe, policyGuide } = this.policy;\n\n    const { icon, color } = isSafe ? SAFE_POLICY : UN_SAFE_POLICY;\n    this.icon = icon;\n    this.color = color;\n    this.name = policyGuide.name;\n  }\n}\n","<div class=\"policy\" [style.--color]=\"color\">\n    <i class=\"policy__icon fas\" [class]=\"icon\"></i>\n    <span class=\"policy__name\" [title]=\"name\">{{ name }}</span>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DefaultLanguage, RiskLevels, TopicPickerSelected, Topics } from 'src/constants';\n\ninterface TopicViewModel {\n  name: string,\n  level: number,\n  icon: string,\n  riskColor: string,\n}\n\n@Component({\n  selector: 'app-regression-test-box',\n  templateUrl: './regression-test-box.component.html',\n  styleUrls: [ './regression-test-box.component.less' ]\n})\nexport class RegressionTestBoxComponent implements OnInit {\n  defaultLanguage = DefaultLanguage;\n  topicArray: Array<TopicViewModel> = [];\n  riskLevels = RiskLevels;\n  @Input() topics: { [topic: string]: any } = {};\n  @Input() isShow = false;\n  @Output() _close = new EventEmitter<boolean>();\n\n  constructor () { }\n\n  ngOnInit (): void {\n    // Handle topicArray\n    this.topicArray = Object.entries(this.topics).map(([ topic, level ]) => {\n      const { name, faIcon: icon } = Topics[topic];\n      const riskColor = RiskLevels[level].color;\n\n      return { name, level, icon, riskColor };\n    });\n  }\n\n  onClose () {\n    console.log('[app-regression-test-box] onClose exec ...');\n    this.isShow = false;\n    this._close.emit(false);\n  }\n\n  // Todo: handle language change\n  onLanguageChanged (language) {\n    console.log('[app-regression-test-box] onLanguageChanged selected language: ', language);\n  }\n\n  // Todo: handle level change\n  onChangeLevel (currentTopic: TopicViewModel, newLevel: string) {\n    console.log('[app-regression-test-box] onChangeLevel get currentTopic: [%s], newLevel: [%s]', currentTopic, newLevel);\n  }\n\n  // Todo: handle selected topic change\n  onTopicPickerChanged (topicSelected: TopicPickerSelected) {\n    console.log('[app-regression-test-box] onTopicPickerChanged get topicSelected: ', topicSelected);\n  }\n}\n","<div class=\"regression-wrapper\" [ngClass]=\"{'show': isShow}\">\n    <!-- overlay -->\n    <div class=\"overlay\" (click)=\"onClose()\"></div>\n    \n    <!-- regression box -->\n    <div class=\"regression-box\">\n        <h4 class=\"title\">Add it to the regression tests</h4>\n    \n        <!-- topic label -->\n        <div class=\"label-box\">\n            <p class=\"box-title\">How should it be labelled</p>\n    \n            <div class=\"topics\">\n                <div class=\"topic-item\" *ngFor=\"let topic of topicArray\">\n                    <i class=\"topic__icon fas\" [class]=\"topic.icon\"></i>\n                    <p class=\"topic__name\" [title]=\"topic.name\">{{ topic.name }}</p>\n    \n                    <div class=\"topic__level\">\n                        <app-tooltip *ngFor=\"let level of riskLevels | keyvalue\" [text]=\"level.value.name\">\n                            <div\n                                (click)=\"onChangeLevel(topic, level.key)\"                            \n                                [style.--background-color]=\"level.value.color\"\n                                [attr.data-label]=\"level.value.name\"\n                                [ngClass]=\"{'active': level.key == topic.level}\"\n                                class=\"level\"\n                                >{{ level.key }}\n                            </div>\n                        </app-tooltip>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        <!-- topic-picker -->\n        <div class=\"topic-box\">\n            <p class=\"box-title\">Add Topics</p>\n    \n            <app-topic-picker [topicSelected]=\"topics\" (onSelectChanged)=\"onTopicPickerChanged($event)\"></app-topic-picker>\n        </div>\n    \n        <!-- language-picker -->\n        <div class=\"language-box\">\n            <p class=\"box-title\">Wrong Language?</p>\n    \n            <app-language-picker [selectedLanguage]=\"defaultLanguage\" (languageChanged)=\"onLanguageChanged($event)\">\n            </app-language-picker>\n        </div>\n    \n        <!-- comment -->\n        <div class=\"comment\">\n            <p class=\"box-title\">Leave a comment</p>\n    \n            <textarea name=\"\" id=\"\" rows=\"4\" placeholder=\"Type your Comment (Optional)\"></textarea>\n        </div>\n    \n        <!-- button group -->\n        <div class=\"button-group\">\n            <button class=\"item button--light-green\">Apply</button>\n            <button class=\"item button--black\" (click)=\"onClose()\">Cancel</button>\n        </div>\n    \n        <!-- close button -->\n        <div class=\"button-close\" (click)=\"onClose()\">\n            <i class=\"material-icons\">close</i>\n            <span>Close</span>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Topics, RiskLevels } from 'src/constants';\n\nenum Type {\n  compact = 'compact'\n}\n\n@Component({\n  selector: 'app-topic',\n  templateUrl: './topic.component.html',\n  styleUrls: ['./topic.component.less']\n})\nexport class TopicComponent implements OnInit {\n  @Input() topic: string;\n  @Input() level: any;\n  @Input() type: Type = null;\n\n  riskColor: string;\n  topicData: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.topicData = Topics[this.topic];\n    this.riskColor = RiskLevels[this.level].color;\n  }\n}\n","<container-element [ngSwitch]=\"type\">\n    <!-- compact style -->\n    <div class=\"topic topic--compact\" [style.--level-color]=\"riskColor\" *ngSwitchCase=\"'compact'\">\n        <i class=\"topic__icon fas\" [class]=\"topicData.faIcon\"></i>\n        <span class=\"topic__risk\">{{ level }}</span>\n    </div>\n\n    <!-- default style -->\n    <div class=\"topic\" [style.--level-color]=\"riskColor\" *ngSwitchDefault>\n        <i class=\"topic__icon fas\" [class]=\"topicData.faIcon\"></i>\n        <span class=\"topic__name\" [title]=\"topicData.name\">{{ topicData.name }}</span>\n        <span class=\"topic__risk\">{{ level }}</span>\n    </div>\n</container-element>","export * from './right-underscore/right-underscore.pipe'\nexport * from './risk-level-to-color/risk-level-to-color.pipe'","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rightUnderscore'\n})\nexport class RightUnderscorePipe implements PipeTransform {\n\n  transform(value: string, args?: any): unknown {\n    value = value.replace(/.*_/, '');\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RiskLevels } from 'src/constants';\n\n@Pipe({\n  name: 'riskLevelToColor'\n})\nexport class RiskLevelToColorPipe implements PipeTransform {\n\n  transform(level: any): unknown {\n    const riskLevel = RiskLevels[level];\n    return riskLevel.color;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DefaultService, TextInput } from 'classify-text-swagger-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiagnoseService {\n\n  constructor(private api: DefaultService) {}\n\n  search(params?: TextInput) {\n    return this.api.classifyText(params).toPromise()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PolicyGuide } from 'src/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n  defaultPolicyGuide: Array<PolicyGuide> = [\n    {\n      name: 'Global Chat',\n      rules: [\n        { topic: '0', riskThreshold: 6 },\n        { topic: '5', riskThreshold: 5 },\n      ]\n    },\n    {\n      name: 'Private Chat',\n      rules: [\n        { topic: '5', riskThreshold: 6 },\n      ]\n    }\n  ];\n\n  constructor() { }\n\n  getPolicyGuides() {\n    // Todo: HttpRequest to get data from Backend API\n    // let return default data for now\n    return this.defaultPolicyGuide;\n  }\n}\n"],"sourceRoot":"webpack:///"}